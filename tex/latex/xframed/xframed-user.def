%%=======================================================%%
%%=======================================================%%
%% xframed-user.def                                      %%
%%                                                       %%
%% file to define frontends for users                    %%
%% file is part of the package xframed                   %%
%%                                                       %%
%% Author's name: Marco Daniel                           %%
%% License type: lppl                                    %%
%%                                                       %%
%%  Copyright (c) 2013 Marco Daniel                      %%
%%                                                       %%
%%  This package may be distributed under the terms      %%
%%  of the LaTeX Project Public License, as described    %%
%%  in lppl.txt in the base LaTeX distribution.Either    %%
%%  version 1.0 or, at your option, any later version.   %%
%%=======================================================%%
%%=======================================================%%


%%Defining new document environment based on xframed
%%syntax \Newxframedenv[option list]{env name}
\NewDocumentCommand \Newxframedenv { O{} m }
 {
  \NewDocumentEnvironment { #2 }{ }
   { 
     \xframedsetup{#1}
     \begin{xframed}
   }
   { 
    \end{xframed} 
   }
 }
%%Redefining document environment based on xframed
%%syntax \Renewxframedenv[option list]{env name}
\NewDocumentCommand \Renewxframedenv { O{} m }
 {
  \RenewDocumentEnvironment { #2 }{ O{} }
   { 
    \xframedsetup{#1}
    \begin{xframed}
   }
   { 
    \end{xframed} 
   }
 }

%%Defining method to save styles
\NewDocumentCommand \newxframedstyle { m m }
 {
  \tl_if_exist:cTF { xframed_style_#1_user }
   {
    \msg_warning:nnx { xframed } { style-already-defined } { #1 }
    \addtoxframedstyle { #1 } { #2 }
   }
   {
    \tl_new:c  { xframed_style_#1_user } 
    \tl_set:cn { xframed_style_#1_user } { #2 }
   }
 }


\NewDocumentCommand \renewxframedstyle { m m }
 {
  \tl_if_exist:cTF { xframed_style_#1_user }
   {
    \tl_set:cn { xframed_style_#1_user } { #2 }
   }
   {
    \msg_warning:nnx { xframed } { style-not-defined } { #1 }
    \newxframedstyle { #1 } { #2 }
   }
 }

 
\NewDocumentCommand \addtoxframedstyle { m m }
 {
  \tl_if_exist:cTF { xframed_style_#1_user }
   {\tl_put_right:cn { xframed_style_#1_user } { #2 } }
   {
    \msg_warning:nnx { xframed } { style-not-defined } { #1 }
    \newxframedstyle { #1 } { #2 }
   }
 }

 
 
 
 
%%Allows the usage of length defined by key=value
%%\usexframendlength{key}
%%http://tex.stackexchange.com/a/112345/5239
\NewDocumentCommand \usexframendlength { m }
 {
%  \xframed__get_length:n { #1 }
  \tl_if_empty:fTF   % return value is empty but only if we do "f" expansion
   {  \prop_get:Nn \l__xframed_length_option_prop { #1 }  }
   { 
    0pt 
    \msg_warning:nnnn
     { xframed } 
     { prop-key-not-available }
     { #1 }
     { length }
   }
   {  
    \prop_get:Nn \l__xframed_length_option_prop { #1 } 
   }  
 }
%%\showxframendlength{key}
%%http://tex.stackexchange.com/a/112345/5239
\NewDocumentCommand \showxframendlength { m }
 {
  %needed if value was length
%  \dim_set:Nn \l_tmpa_dim { \xframed__get_length:n { #1 } } 
%  \dim_use:N  \l_tmpa_dim
  \tl_if_empty:fTF   % return value is empty but only if we do "f" expansion
   {  \prop_get:Nn \l__xframed_length_option_prop { #1 }  }
   {  
    \msg_warning:nnnn
     { xframed } 
     { prop-key-not-available }
     { #1 }
     { length }
    \textcolor{red}{??}
   }
   {  
    \dim_set:Nn \l_tmpa_dim { \xframed__get_length:n { #1 } } 
    \dim_use:N  \l_tmpa_dim
   }  
 }






%%Allows the usage of skips defined by key=value
%%\usexframendskips{key}
%%http://tex.stackexchange.com/a/112345/5239
\NewDocumentCommand \usexframendskip { m }
 {
%  \xframed__get_skips:n { #1 }
  \tl_if_empty:fTF   % return value is empty but only if we do "f" expansion
   {  \prop_get:Nn \l__xframed_skip_option_prop { #1 }  }
   { 
    0pt 
    \msg_warning:nnnn
     { xframed } 
     { prop-key-not-available }
     { #1 }
     { skip }
   }
   {  
    \prop_get:Nn \l__xframed_skip_option_prop { #1 } 
   }  
 }
%%\showxframendskip{key}
\NewDocumentCommand \showxframendskip { m }
 {
  %needed if value was a skip
%  \skip_set:Nn \l_tmpa_skip { \xframed__get_skip:n { #1 } }
%  \skip_use:N   \l_tmpa_skip
  \tl_if_empty:fTF   % return value is empty but only if we do "f" expansion
   {  \prop_get:Nn \l__xframed_skip_option_prop { #1 }  }
   {  
    \msg_warning:nnnn
     { xframed } 
     { prop-key-not-available }
     { #1 }
     { skip }
    \textcolor{red}{??}
   }
   {  
    \skip_set:Nn \l_tmpa_skip { \xframed__get_skip:n { #1 } } 
    \skip_use:N  \l_tmpa_skip
   }   
 }
 
 
 
 
 
 
%%Allows the usage of color defined by key=value
%%\usexframendcolor{key}
%%http://tex.stackexchange.com/a/112345/5239
\NewDocumentCommand \usexframendcolor { m }
 { 
%  \color { \xframed__get_color:n { #1 } }
  \tl_if_empty:fTF   % return value is empty but only if we do "f" expansion
   {  \prop_get:Nn \l__xframed_color_option_prop { #1 }  }
   {  
    \msg_warning:nnnn
     { xframed } 
     { prop-key-not-available }
     { #1 }
     { color }
    \textcolor{red}{??}
   }
   {  
    \color{ \prop_get:Nn \l__xframed_color_option_prop { #1 } }
   }  
 }

%%\showxframendcolor{key}
%%http://tex.stackexchange.com/a/112345/5239
\NewDocumentCommand \showxframendcolor { m }
 {
 % \xframed__get_color:n { #1 }  
 \tl_if_empty:fTF   % return value is empty but only if we do "f" expansion
   {  \prop_get:Nn \l__xframed_color_option_prop { #1 }  }
   {  
    \msg_warning:nnnn
     { xframed } 
     { prop-key-not-available }
     { #1 }
     { color }
    \textcolor{red}{??}
   }
   {  
    \prop_get:Nn \l__xframed_color_option_prop { #1 }
   }
 }

 
%%Surround predefined environments with xframed
%%syntax \Surroundwithxframed[option list]{env name}
\NewDocumentCommand \Surroundwithxframed { O{} m }
 {
  \BeforeBeginEnvironment{#2}{\begin{xframed}[#1]}%
  \AfterEndEnvironment{#2}{\end{xframed}}%
%   \xframed_before_env:nn { #2 } { \begin{xframed}[#1] }
%   \xframed_after_env:nn  { #2 } { \end{xframed}       }
 }
 
 
\tex_endinput:D 

