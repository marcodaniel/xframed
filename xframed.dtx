% \iffalse meta-comment
%<*internal>
\iffalse
%</internal>
%<*readme>
----------------------------------------------------------------
The xframed package --- draw a frame around material
E-mail: marco.daniel@mada-nada.de
Released under the LaTeX Project Public License v1.3c or later
See http://www.latex-project.org/lppl.txt
----------------------------------------------------------------

Requires expl3
%</readme>
%<*internal>
\fi
\def\nameofplainTeX{plain}
\ifx\fmtname\nameofplainTeX\else
  \expandafter\begingroup
\fi
%</internal>
%<*install>
\input l3docstrip.tex
\keepsilent
\askforoverwritefalse
\preamble
=======================================================
=======================================================
 file is part of the package xframed                   
                                                       
 Author's name: Marco Daniel                           
 License type: lppl                                    
                                                       
  Copyright (c) 2013 Marco Daniel                      
                                                       
  This package may be distributed under the terms      
  of the LaTeX Project Public License, as described    
  in lppl.txt in the base LaTeX distribution.Either    
  version 1.0 or, at your option, any later version.   
=======================================================
=======================================================


\endpreamble
\postamble
=======================================================
=======================================================
 Author's name: Marco Daniel                           
 License type: lppl                                    
                                                       
  Copyright (c) 2013 Marco Daniel                      
                                                       
It may be distributed and/or modified under the        
conditions of the LaTeX Project Public License (LPPL), 
either version 1.3c of this license or (at your option)
any later version. The latest version of this license  
is in the file:                                        
   http://www.latex-project.org/lppl.txt               
=======================================================
=======================================================
\endpostamble
\usedir{tex/latex/\jobname}
\generate{\file{\jobname.sty}{\from{\jobname.dtx}{package}}}
\generate{\file{\jobname-default.def}{\from{\jobname.dtx}{package-default}}}
\generate{\file{\jobname-dev.def}{\from{\jobname.dtx}{package-dev}}}
\generate{\file{\jobname-dim.def}{\from{\jobname.dtx}{package-dim}}}
\generate{\file{\jobname-funct.def}{\from{\jobname.dtx}{package-funct}}}
\generate{\file{\jobname-initial.def}{\from{\jobname.dtx}{package-initial}}}
\generate{\file{\jobname-keys.def}{\from{\jobname.dtx}{package-keys}}}
\generate{\file{\jobname-listings.def}{\from{\jobname.dtx}{package-listings}}}
\generate{\file{\jobname-mdframed.def}{\from{\jobname.dtx}{package-mdframed}}}
\generate{\file{\jobname-minted.def}{\from{\jobname.dtx}{package-minted}}}
\generate{\file{\jobname-msg.def}{\from{\jobname.dtx}{package-msg}}}
\generate{\file{\jobname-split.def}{\from{\jobname.dtx}{package-split}}}
\generate{\file{\jobname-theorem.def}{\from{\jobname.dtx}{package-theorem}}}
\generate{\file{\jobname-tikz.def}{\from{\jobname.dtx}{package-tikz}}}
\generate{\file{\jobname-titlefoot.def}{\from{\jobname.dtx}{package-titlefoot}}}
\generate{\file{\jobname-todo.def}{\from{\jobname.dtx}{package-todo}}}
\generate{\file{\jobname-user.def}{\from{\jobname.dtx}{package-user}}}

\generate{\file{\jobname-doc.sty}{\from{\jobname.dtx}{doc-package}}}

%</install>
%<install>\endbatchfile
%<*internal>
\usedir{source/latex/\jobname}
\generate{
  \file{\jobname.ins}{\from{\jobname.dtx}{install}}
}
\nopreamble\nopostamble
\usedir{doc/latex/\jobname}
\generate{
  \file{README.txt}{\from{\jobname.dtx}{readme}}
}
\ifx\fmtname\nameofplainTeX
  \expandafter\endbatchfile
\else
  \expandafter\endgroup
\fi
%</internal>
%<*driver|package>
\RequirePackage{expl3,xparse}
%</driver|package>
%<*driver>
% !TEX program = arara
% !TEX encoding = utf8
% !TEX spellcheck = en_GB
% !arara: dtx: { engine: lualatex , shell: true , synctex: true , printindex: true, printchanges: true }
% arara: lualatex: { shell: true , synctex: true }
% !arara: lualatex: { shell: true , synctex: true }
\setcounter{errorcontextlines}{999}
\documentclass[full,12pt,tocdepth=3]{l3doc}
\usepackage{xframed-doc}
\usepackage[minted=true]{xframed}
% \xframedmintedsetup{hook={\MakePercentComment\catcode`\^^M=10\relax}}
% \AtBeginEnvironment{xframedexample}{\MakePercentComment}
\usepackage{frcursive}
\usetikzlibrary{decorations.pathmorphing}
%\RequirePackage{minted}
% \usemintedstyle{autumn}
\fvset{xleftmargin=0.2cm,xrightmargin=.2cm}

\setcounter{secnumdepth}{3}

\ExplSyntaxOn
\Newxframedenv
 [
  line-color=green!60!black,
  bg-color=green!10,
  head = { \textcolor{green!60!black}{ \faInfoSign } },
 ]{Note}
\ExplSyntaxOff
\def\theFancyVerbLine{\rlap{\rmfamily\tiny\arabic{FancyVerbLine}}}
\DisableImplementation
\begin{document}
  \DocInput{\jobname.dtx}
\end{document}
%</driver>
% \fi
%
% \changes{v0.1alpha}{2013/06/22}{first dtx-file}
%
%
% \begin{documentation}
%
%
% \title{The \Pack{xframed} package}
% %^^A \subtitle{This is an alpha-version}
% \author{Marco Daniel}
% \date{XXXXXXX}
% %^^A \notes{As shown in the subtitle this is an alpha version. Use this package on your own risk.\\[.5cm] I know my English is really poor and the quality of the documentation suffers on it.  So I am really happy about any improvments.\\[1cm] As long as the package has the version alpha I am not deprecated to change names of options. My aim is to use as many intuitive options as possible.}
% \maketitle
% 
% \vspace*{\fill}
% \begin{xframed}[line-width=3pt,line-color=purple!30!white,bg-color=yellow!10,developer-info,margin=1cm]
% \rule{0pt}{5cm}
% \end{xframed}
% \clearpage
% \pdfbookmark[1]{\contentsname}{tocbook}
% \tableofcontents
% 
% 
% \secpreamble{\dictum[\href{http://tex.stackexchange.com/a/18360/5239}{Gonzalo Medina at TeX.SX}]{%
% Expand $(a+b)^n$:
% \begin{center}
%   \count255=0
%   \loop\advance\count255 by 10
%   \ifnum\count255<40
%     $(a\hskip\count255 pt +\hskip\count255 pt b)^n$\\
%   \repeat
% \end{center}}}
% \addsec{Preface}
% \addsubsec{Introduction}\label{sec:intro}
% I am interested in \LaTeX\ and specially in \LaTeX3. With this package I want
% to improve my skills using this great language. However I am a beginner and
% so the package has only an \textit{alpha} version. If you use this package
% be aware of this situation. I am sure the great guys at
% \faArrowRight\href{http://tex.stackexchange.com/}{TeX.SX} will help me to improve this package.
% 
% 
% \addsubsec{Bug reports}\label{sec:bug-reports}
% Bug reports can be done at
% \href{https://github.com/marcodaniel/xframed/issues}{xframed at \Github}. If you have no
% account at \Github you can drop me an e-mail
% \href{mailto:marco.daniel@mada-nada.de}{\faEnvelope marco.daniel@mada-nada.de}
% 
% \addsubsec{Installation}
% As long as the package isn't available at CTAN you must install (if you dare it)
% manual. Therefor you can clone the repository in your local texmf tree. I provided
% the correct folder structure at \Github to simplify the installation.
% 
% \secpreamble{\dictum{%
% If you are only interested in the usage of the package you can
% skip this chapter. All options are explain in \autoref{chap:usage}}}
% \section{Idea behind \texorpdfstring{\Pack{xframed}}{xframed}}\label{chap:idea}
% 
% The idea is very simple. Draw a frame around given material. During my study 
% I wanted a package which can be break across pages and put a frame around this.
% The package \Pack{framed}\footnote{Package \Pack{framed} by Don­ald Arse­neau, 
% see \href{http://www.ctan.org/pkg/framed}{CTAN: framed}} didn't require my needs.
% So I started to write my own package. The result can be found at CTAN, too. It's the
% package \Pack{mdframed}\footnote{Package \Pack{mdframed} by Marco Daniel, 
% see \href{http://www.ctan.org/pkg/mdframed}{CTAN: mdframed}}.
% 
% After passing my study I started to improve the package \Pack{mdframed}. In 2011 
% I registered at \href{http://tex.stackexchange.com/}{TeX.SX}  and learned something
% about the new language \Pack{expl3}\footnote{see: 
% \href{http://latex-project.org/latex3.html}{http://latex-project.org/latex3.html}}. 
% I was so fascinated about the great work of the \LaTeX3 core team that I started 
% my first steps with simple functions. I also wrote a small article about the 
% frontend \Pack{xparse} for the German community. The article was published
% in   \emph{Die \TeX nische Komödie 2/2012}. 
% After a while I wanted to provide my own \Pack{expl3}-package. Now here it is.
% 
% I know most users love examples. So I am trying to provide a lot. All
% frames in this documentation are done by \Env{xframed}. So I hope
% you will have some inspiration. The highlight of listings is done
% by \Pack{minted}\footnote{Package \Pack{minted} by Kon­rad Ru­dolph, 
% see \href{http://www.ctan.org/pkg/minted}{CTAN: minted}, now maintained by G. Poore.}.
% 
% \vfill
% By the way. The compilation of this document is done with the
% typesetting engine \LuaLaTeX. To simplify my compilation steps
% I am using the cool tool \Pack{arara}\footnote{Tool \Pack{arara} by Paulo Cereda, 
% see \href{http://www.ctan.org/pkg/arara}{CTAN: arara}}.
% 
% \vfill
% Now it's time to introduce the package.
% 
% 
% \secpreamble{\dictum[\href{http://tex.stackexchange.com/a/18370/5239}{Jaime Soto at TeX.SX}]{%
% \begin{eqnarray*}
%     \begin{bmatrix}
%     \cos 90^{\circ} & \sin 90^{\circ}\\
%    -\sin 90^{\circ} & \cos 90^{\circ}
% \end{bmatrix}
% \begin{bmatrix} a1 \\ a2 \end{bmatrix}
% =
% \rotatebox[origin=c]{270}{$\begin{bmatrix} a1 \\ a2 \end{bmatrix}$}
% \end{eqnarray*}}}
% \section{Usage}\label{chap:usage}
% The following sections describe the options of the package and the provided 
% environments. The basic environment is equal to the package name \Env{xframed}.
% 
% \subsection{Loading the package}
% Before you can use the package, you must load it in your preamble. As usual the 
% package is loaded by \Cmd{usepackage}. The following listings shows it.
% 
% 
% 
% 
% \begin{xframedexample}[caption=Loading the package,label=loading]
%  % Preamble
%  \usepackage{xframed}
% \end{xframedexample}
% If you have done this you can use the basic environment \Env{xframed}.
% 
% \ExplEnv{xframed}
% The environment has one optional argument where you can specify options
% which are only used for this frame. The following listings demonstrates the usage.
% \begin{xframedexample}[caption=Loading the package,label=loading,]
%  %document body
%  \begin{xframed}[option-list]
%    The contents of the frame
%  \end{xframed}
% \end{xframedexample}
% 
% \subsection{Specifying the options}\label{sec:specopt}
% Before you setup any options you must understand hot the frame is drawn.
% The default method is by using \Pack{TikZ}\footnote{Package \Pack{TikZ} by 
% Till Tantau \& friends, see \href{http://www.ctan.org/pkg/pgf}{CTAN: TikZ}}. 
% \Pack{TikZ} allows a very user friendly way to setup high quality graphics. 
% Therefor all elements are specified by \Pack{TikZ} options. The basic command
% to manipulate these elements is \Cmd{xframedsetuptikz}. The usage is explained
% in \autoref{se:tikzsetup}.  All other options can be set by \Cmd{xframedsetup}. 
% Both command can be used in the preamble or inside the document body. If
% you enclose these commands inside a group the settings will be local, too.
%  
% \ExplCmd{xframedsetuptikz\MArgs}
% The command has one mandatory argument. The mandatory argument accepts only
% defined options which are explained in \autoref{se:tikzsetup}
% 
% All other options can be setup by the command \Cmd{xframedsetup}.
% \ExplCmd{xframedsetup\MArgs}
% This command has one mandatory argument. All allowed options are explained
% in \autoref{chap:options}. 
% 
% \ExplCmd{newxframedstyle}[\MArgs[style-name]\MArgs]
% Often it is useful to declare a style with the needed options. Therefor
% you can use the command \Cmd{newxframedstyle}. The command
% has two mandatory arguments. The first mandatory argument
% is the name of the style. Internal the style name is saved
% as \verb+xframed_style_<style-name>_user+. That means normally
% you can use every style name without any risk. If the style already exists
% \Pack{xframed} uses the commmand \Cmd{renewxframedstyle} and
% provides a warning.
% 
% After you have defined a style you can use the name of the style as
% a legal value of the option \Opt{style}.
% 
% \ExplCmd{renewxframedstyle}[\MArgs[style-name]\MArgs]
% If you wan to redefine an existing style you can do this by 
% \Cmd{renewxframedstyle}. The syntax of the command
% is equal to \Cmd{newxframedstyle}. If the style doesn't exist
% \Pack{xframed} uses the command \Cmd{newxframedstyle} and
% provides a warning.
% 
% \ExplCmd{addtoxframedstyle}[\MArgs[style-name]\MArgs]
% If you want to extend a predefined style you can do this
% with \Cmd{addtoxframedstyle}. The command has the same
% syntax as \Cmd{newxframedstyle}. If the style doesn't exist
% \Pack{xframed} uses the command \Cmd{newxframedstyle} and
% provides a warning.
% 
% \ExplOpt{style}
% The option \Opt{style} needs the name of a predefined style
% by \Cmd{newxframedstyle} . All options declared with \Cmd{newxframedstyle} 
% will be used.
% 
% 
% \subsection{Helper functions}\label{sec:helperfunctions}
% The next function will normally be used by advanced users. However
% I decided to put this information here instead of in
% \autoref{chap:developer-info}~\nameref{chap:developer-info}.
% All commands have one mandatory argument. The mandatory argument
% is one of the explained keys in the following sections. 
% 
% \begin{Note}
% The mandatory argument of any helper function doesn't accept a meta key.
% \end{Note}
% 
% \ExplCmd{usexframendlength}[\MArgs[key]]
% This command  allows you to use the
% provided length inside an other command. The \texttt{key} is one of
% the length keys explained in the following sections. 
% \ExplCmd{showxframendlength}[\MArgs[key]]
% The command \Cmd{showxframendlength} has one important
% difference to \Cmd{usexframendlength}. The provided length
% can be printed inside the document. For you my \TeX-hacker
% that means the primitive \Cmd{the} is used. 
% 
% \ExplCmd{usexframendskip}[\MArgs[key]]
% This command is equal to \Cmd{usexframendlength} whereby
% a skip key is required.
% \ExplCmd{showxframendskip}[\MArgs[key]]
% I think you know what happen here. See \Cmd{showxframendlength}, 
% it's only for skip length.
% \ExplCmd{usexframendcolor}[\MArgs[key]]
% This command is similar to the command \Cmd{color}, whereby the
% color of the provided option is used.
% \ExplCmd{showxframendcolor}[\MArgs[key]]
% This command print out the color which is hidden under the key.
% 
% 
% 
% 
% \minisec{Example}
% Next to the explanation I want to provide an example. 
% 
% \xframedsetup{developer-info=true}
% 
% \begin{xframedexample}[caption=Example of helper functions,label=helper,result=true,]
%  \begin{xframed}[margin=3cm]
%     \centering
%     \xframedsetup{inner-margin-left=1cm}
%     \showxframendskip{skip-above}%
%     \rule{\usexframendlength{inner-margin-left}}{2pt}%
%     \showxframendcolor{font-color}
%  \end{xframed}
% \end{xframedexample}
% 
% 
% \subsection{Creating new environments}\label{sec:newenv}
% 
% As explained above the package \Pack{xframed} provides
% one basis environment \Env{xframed}. To provide new
% environments which use \Env{xframed} you can work with
% the normal \LaTeXe command \Cmd{newenvironment} or
% the command \Cmd{NewDocumentEnvironment} provided
% by \Pack{xparse}. However \Pack{xframed} tries to simplify
% the process by the following commands.
% 
% \ExplCmd{Newxframedenv}[\OArgs\MArgs[env-name]]
% Create a new environment with the name of the mandatory argument
% of \Env{Newxframedenv}. The optional argument accepts all
% defined keys of \Pack{xframed}.
% 
% \ExplCmd{Renewxframedenv}[\OArgs[env-name]]
% This command is similar to \Cmd{Newxframedenv} whereby
% the command must already exist.
% 
% \ExplCmd{Surroundwithxframed}[\OArgs\MArgs[env-name]]
% Sometimes you have predefined environments like \Env{verbatim}
% where you want to get a colored background. To do this you can 
% surround existing environments with \Cmd{Surroundwithxframed}
% where the mandatory argument is the name of the existing environment.
% The optional argument accepts all keys defined by \Pack{xframed}.
% \begin{Note}
% The declaration by \Cmd{Surroundwithxframed} works global.
% \end{Note}
% 
% Before we start with options we need to understand the provided elements of the frame. 
% 
% \subsection{Elements of the frame drawn by \texorpdfstring{\Pack{xframed}}{xframed}}
% It should be clear the a frame has some rules around. So we can check mark the first
% relevant point.The next point of the agenda is the main body, the title and the foot. These
% three elements are very important to understand the behavior. The simple picture below
% should show the elements and the provided names inside the package.
% 
% \begin{center}
% \captionof{figure}{Base elements of \texorpdfstring{\Pack{xframed}}{xframed}}\label{fig:baseelements}
% \begin{tikzpicture}[outer sep=0pt]
%  \node[draw,fill=gray!20,rectangle,minimum width=8cm, minimum height=2cm,font=\bfseries] (main) {Body of the frame~\faArrowRight~\texttt{main}};
%  \node[draw,fill=gray!30,rectangle,minimum width=8cm, minimum height=1cm,font=\bfseries,anchor=south] at (main.north) {Title of the frame~\faArrowRight~\texttt{first-title}};
%  \node[draw,fill=gray!30,rectangle,minimum width=8cm, minimum height=1cm,font=\bfseries,anchor=north] at (main.south) {Foot of the frame~\faArrowRight~\texttt{last-foot}};
% \end{tikzpicture}
% \end{center}
% I know the picture looks very poor at the beginning but we want to concentrate on the
% main issue. It describes the three base elements of the frame drawn by \Env{xframed}.
% 
% \vspace*{\baselineskip}
% Now let's start with all options. Be aware the list ist long. 
% 
% \secpreamble{\dictum[\href{http://tex.stackexchange.com/a/18354/5239}{Paulo Cereda at TeX.SX}]{%
% Find $x$.
% \begin{tikzpicture}
% \draw (0,0) -- (4,0) node[midway,below] {4 cm}
%    -- (4,3) node[midway,right] {3 cm}
%    -- (0,0) node[midway,left,circle,draw=blue,decorate,decoration={random steps,segment length=1pt,amplitude=0.5pt}]{$x$}
%    -- (4,0) rectangle (3.7,0.3)
%    -- cycle;
% \draw (0.4,0) arc (0:30:0.5);
% \draw (4,2.6) arc (270:226:0.5);
% \draw (1,2.1) node []{\color{blue}\fontfamily{frc}\selectfont{It's here!}};
% \end{tikzpicture}}}
% 
% \section{Package options}\label{chap:options}
% Every user has his/her own wishes. It's very difficult to implement an evironment 
% which meets all requirements. I hope with the following options you can setup your 
% requirements as best as I was able to implement. As described in \autoref{chap:idea}
% the package uses \Pack{expl3} in the background. So I can provide more intuitive names.
% During the explanation I refer to the environment \Env{xframed}. However this is only
% symbolic. The options are also working for other derivations. 
% 
% \ExplOpt{*}
% \Pack{xframed} provides some meta keys. That means if you pass a value
% to the meta option more than one other option are influenced. Every meta
% option has a star~{\let\quad\relax\Metakey}~right of the name. 
% 
% \subsection{Drawing method}\label{sec:method}
% 
% As \Pack{mdframed} I decided to support different methods of frame drawing.
% 
% The usage of TikZ or PSTricks needs a lot more compilation time then the normal
% \LaTeX\ command \Cmd{rule}. In most cases a simple \Cmd{rule} is ok. However
% instead of \Pack{mdframed} you can choose the method for every frame separate.
% 
% \begin{Note}
% Up to know there is no PSTricks implementation.
% \end{Note}
% 
% \ExplOpt[tikz]{frame-method}
% The option \Opt{frame-method} allows you to declare the drawing commands.
% All allowed options are:
% \begin{center}
% \def\arraystretch{1.25}
% \begin{tabular}{@{}>{\MacroFont}lp{0.6\linewidth}@{}}\hline
%  default, tex, latex, none& Draw the frame with standard \LaTeXe commands. It needs the least compilation time.\\
%  pgf, tikz& Draw the frame with TikZ. It needed the highest compilation time.\\
%  pstricks, ps , postscript& Draw the frame with PSTricks.  \\\hline
% \end{tabular}
% \end{center}
% 
% \ExplOpt{tikz*,default*}
% These options aren't meta option but I want to emphasize them. Theses options are 
% short forms of \Opt{frame-method}\texttt{=tikz} respectively \Opt{frame-method}\texttt{=default}.
% The options don't allow any values.
% 
% 
% \subsection{Outside the frame}
% Drawing a frame requires some modifications around. So you want to setup the margins
% or the skips above or below the frame. Related to the meaning of the keys, all keys 
% requiers a length or skip dimension. That mean that the length variables defined as
% \texttt{dim} have a fixed length, whereas \texttt{skip} length can have a rubber (stretch/shrink) component. 
% 
% \ExplOpt[\string\linewidth]{width}
% This key allows you to specify the width of the complete frame. 
% Normally you don't need this key. All related length (left margin, right margin)
% can be specified by options. 
% 
% 
% \ExplOpt[10\,pt]{skip*,skip-above,skip-below}
% The lengths represent the space before and after the environment \Env{xframed}.  
% This option \Opt{skip} is a meta key and sets the \Opt{skip-below} and \Opt{skip-above} to the given skip length. 
% 
% 
% \ExplOpt[0\,pt]{margin*,margin-left,margin-right}
% Normally the frame \Env{xframed} is drawn about the complete text width. However this isn't
% often very common shrinking the outer margin. This keys accept a dimension length 
% which specify the left and the right margin. You can also use negative values. In this case the frame 
% is drawn inside the margin of the page.
% 
% 
% \ExplOpt[0\,pt]{extra-skip}
% Sometimes it's useful to add some vertical white space in front of the frame. This can be useful
% if you want some elements on the lines. To take care of this required space you can
% set the Option \Opt{extra-skip}. Negative dimensions are also allowed whereby I can't
% image any situation to use it. 
% 
% 
% 
% \vspace*{\baselineskip}
% This finished the \emph{outside} part for the moment. The package provides also some hooks
% which will can be used as an option. This isn't really a low level issue so these
% options are described in \autoref{sec:hook}. 
% 
% \vspace*{\baselineskip}
% Before I will describe the options related to there base element as shown in \autoref{fig:baseelements}, 
% I will start with the rules around the frame.
% 
% \subsection{Rules around the frame}\label{sec:lines}
% A normal frame has four sides. The frame of \Env{xframed} isn't an exception. Of course
% you can manipulate as possible to get a triangle or a star.
% 
% \ExplOpt[0.8\,pt]{line-width*,line-width-left,line-width-right,line-width-top,line-width-bottom}
% The first option in this section specify the width of all four lines around the material of \Env{xframed}.
% This implies the title and the foot of the frame. If you want to setup the rule width of the elements
% separate you can do this by the following options.
% 
% 
% The width is only one part of the lines. I am sure you want to change the colors too. 
% \ExplOpt[black]{line-color*,line-color-right,line-color-top,line-color-bottom}
% Normally all lines have the same color. The color for all four lines can be specified 
% with the Option \Opt{line-color}. However the following keys allow the color
% specification separate.
% 
% 
% \minisec{Example}
% I think it's time for a small example. Suppose you want that all lines has a width of
% 2\,pt expect the top line which shall have a width of 4pt and a different color.
% This can be achieved by
% \begin{xframedexample}[caption=Example outer part,label=outer,result=true,]
%  \begin{xframed}[line-width=2pt,line-width-top=4pt,
%           line-color-top=blue]
%    The contents of the frame
%  \end{xframed}
% \end{xframedexample}
% As a small revision we can achieve the same effect with \Cmd{xframedsetup}, 
% whereby the settings are used for the the environments \Env{xframed} to follow.
% \begin{xframedexample}[caption={Example outer part II},]
%  \xframedsetup[line-width=2pt,line-width-top=4pt
%            ,line-color-top=blue]
%  \begin{xframed}
%    The contents of the frame
%  \end{xframed}
% \end{xframedexample}
% 
% As you can see the topline gets a smooth transition. 
% 
% \ExplOpt{show-all-lines*}%metakeys
% By default a frame has four lines around it. Drawing no
% lines can be achieved by the boolean flag \Opt{show-all-lines}.
% If you don't want to draw any lines you can pass the value \texttt{false}
% to the option \Opt{show-all-lines}
% 
% \ExplOpt[true]{top-line,left-line,bottom-line,right-line}%bool-option
% The option \Opt{show-all-lines} controls the behavior
% of all lines. But you can control every line separate. The option 
% \Opt{top-line} and friend influence the lines of the frame. All four are 
% boolean keys and accepts either \texttt{true} or \texttt{false}.
% 
% 
% \ExplOpt[10\,pt]{round-corner*,arc*,arc-outer,arc-inner}
% The arc of the corners can be controlled by the provided keys. Thereby
% you can manipulate the outer arc and the inner arc separate.
% I provided two meta keys because I couldn't provide a correct name.
% That means the value of \Opt{round-corner} or \Opt{arc} is passed
% to the options \Opt{arc-outer} and \Opt{arc-inner}. 
% 
% \minisec{Example}
% I think it's time for a small example.
% 
% \begin{xframedexample}[caption=Example outer part III,result=false,label=arc]
% \newxframedstyle{example-outerpart}
%    { line-width=4pt,margin=1cm,line-color=red!40!black,
%      bg-color=red!20,round-corner=20pt,arc-outer=5pt}
%  \begin{xframed}[style=example-outerpart]
%   \begin{minted}{latex}
%     \newxframedstyle{example-outerpart}
%       { line-width=4pt,margin=1cm,line-color=red!40!black,
%         bg-color=red!20,round-corner=20pt,arc-outer=5pt}
%   \end{minted}
%   The contents of the frame with some text
%   and some more text. And more text.
%  \end{xframed}
% \end{xframedexample}
% 
% \subsection{Main body of the frame}\label{sec:element-main}
% As shown in \autoref{fig:baseelements} the body is the main part of
% the environment \Env{xframed}. Inside the body you can use every
% material also verbatim one. This part is save in a single coffin%
% \footnote{See: \Pack{l3coffin}}  and allows such things. 
% 
% \ExplOpt[\string\normalfont]{font}
% The option \Opt{font} allows the specification of the main part of \Env{xframed}.
% It doesn't influence the other part. 
% 
% \ExplOpt[black]{font-color}
% If you want to change the font color you can do this with the option \Opt{font-color}.
% 
% \ExplOpt[white]{bg-color}
% The complete background of \Env{xframed} is specified by the color given
% as an argument of \Opt{bg-color}. If you want some shadings or whatever
% you can imagine you can the power of TikZ. How to do this
% is explained in \autoref{sec:tikzsetup}.
% 
% \ExplOpt[10\,pt]{inner-margin*,inner-margin-left,inner-margin-right}
% The distance on the left site and the right site of the frame will be 
% controlled by \Opt{inner-margin-left} and \Opt{inner-margin-right}. The 
% key \Opt{inner-margin} pass the value to the relevant lengths. 
% 
% \begin{Note}
% The length will be used for the other two elements as shown in 
% \autoref{fig:baseelements}, too.
% \end{Note}
% 
%  Related to the left and right margin you can set the top and bottom margin.
% \ExplOpt{inner-top-margin}
% This keys sets the top margin of the main part.
% \ExplOpt{inner-bottom-margin}
% This keys sets the bottom margin of the main part.
% 
% 
% \minisec{Head of the frame}
% Sometimes you want to have a small head without any break. This
% can be achieved by the key \Opt{head}. I implement this key with 
% some other options to simplify e.g. the creating of a new theorem. There
% is also another option \Opt{first-title} which is used in a new coffin and
% so put in an extra box. At the moment all captions of the provided listings
% are done in the \Opt{first-title}. 
% 
% 
% \ExplOpt{head}
% Puts the given argument of \Opt{head} at the beginning
% of the main body.
% \ExplOpt[\string\normalfont\string\sffamily\string\bfseries]{head-font}
% The font is specified by the option \Opt{head-font} which be set set local as
% also the color.
% \ExplOpt[black]{head-font-color}
% Specifies the color of the head.
% 
% 
% \minisec{Head of the frame}
% I guess at this point an example is useful. Instead of explaining I 
% only provide the example.
% 
% \xframedsetup{developer-info=true}
% \begin{xframedexample}[caption={Example main part},label=main,result=true]
%  \begin{xframed}[%
%    line-width=4pt,line-color=blue,
%    inner-margin=1cm,font-color=blue!70,
%    head={Example of Head},head-font-color={red!70},
%    margin=1.5cm,bg-color=yellow!20,
%   ]
%    The contents of the frame and some filling text to 
%   provide a second line.
%  \end{xframed}
% \end{xframedexample}
% \xframedsetup{developer-info=false}
% 
% 
% \subsection{Title of the frame}\label{sec:element-firsttitle}
% The title of the frame is specified by an option and also save in a coffin. 
% This means the paragraphs of the body can't be influence by material
% of the title. Here you can see the first main differences between
% \Opt{first-title} and \Opt{head}. Let us start with options.
% 
% \ExplOpt{first-title}
% First of all we need a title. The title can be specified by \Opt{first-title}. The argument
% is saved in a single token. Of course you can use line breaks but please en capsule
% the whole argument in curly braces. Curly braces must be used if you argument contains
% a comma. May you wonder why it's named \Opt{first-title}. If the frame
% must be splitted the \Opt{first-title} is only used at the first frame. If
% you don't have any splitted frame, you have only one tile the \Opt{first-title}.
% \ExplOpt[\string\bfseries\string\sffamily\string\large]{title-font}
% Normally the title should be highlighted. So I decided to declare the list of
% font commands as default. However you can use the option \Opt{title-font} to
% declare your own font settings.
% \ExplOpt[black]{title-font-color}
% As usual you can specify the color of the font. This is done by the option
% \Opt{title-font-color}.
% 
% \ExplOpt[5pt]{title-skip*,title-skip-above,title-skip-below}
% As written the title is put inside a new coffin. The explained options \Opt{inner-margin},
% \Opt{inner-margin-left} and \Opt{inner-margin-right} will be used on the left and right side of
% the title component. However you can specify the length above and below the contents of the title. 
% The option \Opt{title-skip} passes the argument to the options \Opt{title-skip-above}
% and \Opt{title-skip-below}.
% 
% 
% \begin{Note}
% I know the name \texttt{skip} leads to irritations. The length are saving in a
% dimension register and so any glue  is cut off.
% \end{Note}
% 
% \ExplOpt[white]{title-bg-color}
% As the main part you can specify a different color as background for
% the title. This color of the option \Opt{title-bg-color} will be used for it.
% 
% 
% The package \Pack{xframed} provides a single line between the title and the main body.
% The following options show you the usage. Of course with methods of
% \autoref{sec:tikzsetup} you can draw dashed lines or other one as well.
% \ExplOpt[true]{title-line}
% The option \Opt{title-line} is a boolean key. If you say \texttt{true} a line to separate
% the material will be drawn. If you say \texttt{false}, you will get no line.
% \ExplOpt[0.6pt]{line-width-title}
% The width of the line is specified by the option \Opt{line-width-title} whereby
% the width doesn't influence the length \Opt{inner-top-margin} and \Opt{title-skip-below}.
% \ExplOpt[black]{title-line-color}
% Last but not least the color of the line is done by \Opt{title-line-color}.
% 
% \minisec{Example}
% It's time for a new example to demonstrate the title.
% 
% \begin{xframedexample}[caption={Example title part},label=title,result=true]
%  \begin{xframed}[title-bg-color=brown!30,%
%    line-width=2pt,line-color=brown!60,
%   first-title={This is the title of the frame},
%    margin=1.5cm,bg-color=yellow!20, ]
%    The contents of the frame and some filling text to 
%   provide a second line.
%  \end{xframed}
% \end{xframedexample}
% 
% 
% 
% \subsection{Foot of the frame}\label{sec:element-lastfoot}
% The settings of the foot element are equal to the title element. So 
% the explanation will be short. 
% \ExplOpt{last-foot}
% The foot can be specified by \Opt{last-foot}. Of course now you
% know why it is named \Opt{last-foot} (related to \Opt{first-title},
% \ExplOpt[\string\bfseries\string\sffamily\string\small]{foot-font}
% The foot is normally a little bit smaller so I decided to use \Cmd{small} as
% default.
% 
% 
% \ExplOpt[black]{foot-font-color}
% Specify the color of the font.
% 
% \ExplOpt[5pt]{foot-skip*,foot-skip-above,foot-skip-below}
% The option \Opt{foot-skip} passes the argument to the options \Opt{foot-skip-above}
% and \Opt{foot-skip-below}. The distance between the separation line between the 
% main part and the material of \Opt{last-foot} is controlled by \Opt{foot-skip-above}.
% On the other hand \Opt{foot-skip-below} specifies
% the length between the frame and the material of \Opt{last-foot}.
% 
% \begin{Note}
% I know the name \texttt{skip} leads to irritations. The length are save in a
% dimension register and so any glue will be cut.
% \end{Note}
% 
% \ExplOpt[white]{foot-bg-color}
% As the main part you can specify a different color as background for
% the foot. This color of the option \Opt{title-bg-color} will be used for it.
% 
% 
% The package \Pack{xframed} provides a single line between the foot and the main body.
% The following options show you the usage. Of course with methods of
% \autoref{sec:tikzsetup} you can draw dashed lines or other one as well.
% \ExplOpt[true]{foot-line}
% The option \Opt{foot-line} is a boolean key. If you say \texttt{true} a line to separate
% the material will be drawn. If you say \texttt{false}, you will get no line.
% \ExplOpt[0.6pt]{line-width-foot}
% The width of the line is specified by the option \Opt{line-width-foot}.
% \ExplOpt[black]{foot-line-color}
% Last but not least the color of the line is done by \Opt{foot-line-color}.
% 
% 
% \minisec{Example}
% It's time for a new example to demonstrate the title.
% 
% \begin{xframedexample}[caption={Example foot part},label=foot,result=true]
%  \begin{xframed}[title-bg-color=brown!30,%
%    foot-bg-color=brown!30,line-width=2pt,
%    line-color=brown!60,margin=1.5cm,bg-color=yellow!20, 
%    first-title={This is the title of the frame},
%    last-foot={you reached the end},]
%    The contents of the frame and some filling text to 
%   provide a second line.
%  \end{xframed}
% \end{xframedexample}
% 
% 
% \subsection{Tikz elements of  \texorpdfstring{\Pack{xframed}}{xframed}}\label{sec:tikzsetup}
% I often refer this section. The reason is very simple. \LaTeX without any 
% extension can draw nice graphics. Therefor bundles like PSTricks
% or TikZ/PGF are needen. This sections shows the implementation
% using TikZ and so it allows a lot of modification. Please note this
% documentation doesn't explain TikZ. Therefor you shall consolidate
% the documentation of TikZ.
% 
% \ExplOpt{setup-tikz}%hooks--tl
% The command to setup all TikZ styles was introduced in \autoref{sec:specopt}.
% The needed command is \Cmd{xframedsetup}. Of course you can also use 
% the option \Opt{setup-tikz} of \Env{xframed}. Nevertheless the syntax of
% the implementation is equal, because the value of
% \Opt{setup-tikz} is passed to \Cmd{xframedsetup}. 
% 
% 
% \minisec{Excursus}
% Let me do a small excursus. TikZ allows very simple to define
% new styles by using the syntax of \Pack{pgfkeys}. For example
% you wan to define your own style for some rectangles you can do this as follows.
% \begin{xframedexample}[caption={Excursus TikZ style},label=excursus,result=false]
% %  \tikzset{my rectangle/.style={fill=green}}
% %  \tikz\draw[my rectangle] (0,0) rectangle (2,0.5);
% \end{xframedexample}
% The result will be \input{\jobname.pyg}. \Pack{xframed} does nearly the same.
% Instead of using the family Tikz, \Pack{xframed} uses the family \texttt{xframed}.
% That means every defined style has the prefix \texttt{xframed}. Related to our
% example above \Pack{xframed} do:
% \begin{xframedexample}[caption={Excursus TikZ style},label=excursusi,result=false]
%   ^^A\xframedsetuptikz{my rectangle/.style={fill=green}}
%   ^^A\tikz\draw[xframed/my rectangle] (0,0) rectangle (2,0.5);
% \end{xframedexample}
% And you get the same result verb+\input{\jobname.pyg}+.\hfill {\small end excursus}
% 
% 
% Next are all defined styles explained. You can change every style with the
% syntax of TiKZ.  I hope I don't forget no element.
% 
% \ExplTOpt[fill = \Opt{bg-color}]{bg/.style}
% This style controls the background of the main element. The
% default is a full filled rectangle whereby the color
% is specified by \Opt{bg-color}. 
% 
% \ExplTOpt[fill = \Opt{title-bg-color}]{title~bg/.style}
% This style controls the background of the title element. The
% default is a full filled rectangle whereby the color
% is specified by \Opt{title-bg-color}. 
% 
% \ExplTOpt[draw = \Opt{title-line-color},line width\Opt{line-width-title}]{title~rule/.style}
% This style controls the separation line between the main and the title element.
% 
% \ExplTOpt[fill = \Opt{foot-bg-color}]{foot~bg/.style}
% This style controls the background of the foot element. The
% default is a full filled rectangle whereby the color
% is specified by \Opt{foot-bg-color}. 
% \ExplTOpt[draw = \Opt{foot-line-color},line~width = \Opt{line-width-foot}]{foot~rule/.style}
% This style controls the separation line between the foot and the title element.
% 
% \ExplTOpt[rounded~corners = \Opt{arc-inner}]{inner~arc/.style}
% This style controls inner arc of the frame.
% \ExplTOpt[rounded~corners = \Opt{arc-outer}]{outer~arc/.style}
% This style controls outer arc of the frame.
% \ExplTOpt[draw = \Opt{line-color-right},line width = \Opt{line-width-right}]{right~line/.style}
% This style controls the right line of the frame.
% \ExplTOpt[draw = \Opt{line-color-left},line width = \Opt{line-width-left}]{left~line/.style}
% This style controls the left line of the frame.
% \ExplTOpt[draw = \Opt{line-color-top},line width = \Opt{line-width-top}]{top~line/.style}
% This style controls the top line of the frame.
% \ExplTOpt[draw = \Opt{line-color-bottom},line width = \Opt{line-width-bottom}]{bottom~line/.style}
% This style controls the bottom line of the frame.
% 
% 
% 
% 
% \subsection{Footnotes}\label{sec:footnotes}
% I provided an extra section about footnotes because 
% footnotes can't be handled as in a normal text. May you
% know the issue from environments like \Env{table} or \Env{figure}. 
% Boxes used by \Pack{xframed} have the same limitation. If you use 
% footnotes inside the environment \Pack{xframed} they are printed
% inside \Env{xframed}. If you have any page breaks the footnotes
% are always printed at the end of the environment before \Opt{last-foot}.
% 
% The following options may help you to format the footnotes.
% \ExplOpt[10\,pt]{footnote-distance}%skip keys
% This skip length is describes the distance between 
% the last line of \Env{xframed} and the the footnote rule.
% \ExplOpt[.8pt]{footnote-line-width}
% The thickness of the footnote rule is specified by this option.
% \ExplOpt[1\,in]{footnote-line-length}
% The width of the footnote rule is provided by the value of the option \Opt{footnote-line-length}
% 
% %%%%\subsection{Subtitle(s)}\label{sec:subtitle}
% %%%%\ExplOpt{subtitle-skip-above}
% %%%%\ExplOpt{subtitle-skip-below}
% %%%%\ExplOpt{subtitle-skip-above}%skip keys
% %%%%\ExplOpt{subtitle-skip-below}%skip keys
% %%%%\ExplOpt{subtitle-font-color}%colorkeys
% %%%%\ExplOpt{subtitle-line-color}%colorkeys
% %%%%\ExplOpt{subtitle-bg-color}%colorkeys
% %%%%\ExplOpt{subtitle-font}%fontoptions--tl
% %%%%\ExplOpt{subtitle-line}%bool-option
% 
% 
% %%\subsection{shadow}\label{sec:shadow}
% %%\ExplOpt{shadow-size}
% %%\ExplOpt{shadow}%bool-option
% %%\ExplOpt{shadow-color}%colorkeys
% 
% \subsection{Hooks}\label{sec:hook}
% What is hook? First time I read hook I thought on Captain Hook of Peter Pan.
% However hooks in \LaTeX aren't pirates. 
% A hook is a macro that isn't used by the package itself. Normally those
% macros are empty. So the user can redefine hooks to influence the
% behavior. Common hooks are \Cmd{AtBeginDocument} or \Cmd{@minipagerestore}.
% 
% To allow the user a lot of modifications \Pack{xframed} provides a lot of hooks next to the options.
% 
% \ExplOpt{code-before,code-after}%hooks--tl
% These two hooks are executed before  respectively after the material 
% of \Env{xframed}. 
% 
% \ExplOpt{code-begin,code-end}%hooks--tl
% These two hooks are executed inside the main element, that means
% inside the coffin directly before respectively after the material
% of \Env{xframed}. 
% 
% 
% \ExplOpt{head-pre-code,head-post-code}%hooks--tl
% These hooks are nearly equal to \Opt{code-begin} and \Opt{code-end}.
% They are executed inside the grouped head.
% 
% \ExplOpt{title-pre-code,title-post-code}%hooks--tl
% These hooks are nearly equal to \Opt{code-begin} and \Opt{code-end}.
% They are executed inside the coffin for the title.
% 
% \ExplOpt{foot-pre-code,foot-post-code}%hooks--tl
% These hooks are nearly equal to \Opt{code-begin} and \Opt{code-end}.
% They are executed inside the coffin for the foot.
% 
% 
% \ExplOpt{tikz-code-post}
% If the frame is drawn by TikZ, the value of the 
% option \Opt{post-tikz-code} is executed at all
% TikZ environments. 
% 
% \ExplOpt{tikz-code-single,tikz-code-first,tikz-code-middle,tikz-code-last}%hooks--tl
% The last part of the option name leads to the execution location.
% If the frame isn't splitted the option \Opt{tikz-code-single} is executed. The
% other elements are equal.
% 
% \ExplOpt{code-frame-single,code-frame-first,code-frame-middle,code-frame-last}%hooks--tl
% At the moment these hooks are provided but not implemented.
% 
% 
% %%%\ExplOpt{subtitle-before,subtitle-after}%hooks--tl
% 
% \subsection{Important typographical notes}
% My first package \Pack{mdframed} got a lot of feature request and
% bug reports (of course). At the moment most of them are fixed. 
% One very important and interesting question was provided by
% Tobias Weh at \href{http://tex.stackexchange.com/}{TeX.SX}. He asked
% \href{http://tex.stackexchange.com/questions/47584/how-to-make-mdframed-ignore-descenders-in-last-line}%
% {How to make mdframed ignore descenders in last line?}. Inspired by
% the great answer of Stephan Lehmke I implented this feature. 
% However this feature shall be missed in \Pack{xframed}.
% 
% \ExplOpt[true]{ignore-last-descender}%bool-option
% The option \Opt{ignore-last-descender} does the same as
% the name say. It ignores the descenders of the last
% line of an element provided by \Pack{xframed}.
% 
% \ExplOpt[true]{ignore-last-skip}%bool-option
% This is equal to \Opt{ignore-last-descender} but it ignores the
% last vertical skip. This is often useful if the contents
% of \Env{xframed} ends with an other environment
% like \Env{itemize}. 
% 
% 
% 
% \minisec{Example}
% Let me show the meaning of the two options \Opt{ignore-last-descender}
% and \Opt{ignore-last-skip}.
% 
% 
% % \begin{center}
% % \captionsetup{format=plain}
% % \noindent\begin{minipage}[t]{0.5\linewidth}
% % \begin{xframedexample}[caption={Example\newline \Opt{ignore-last-descender}\Opt{=true}},result=true,xframed={margin=5pt}]
% % \xframedsetup{%
% %    ignore-last-descender=true}
% % \begin{xframed}
% %   descender not in line
% % \end{xframed}
% % \begin{xframed}
% %   descender in line: skip
% % \end{xframed}
% % \end{xframedexample}
% % \end{minipage}%
% % \begin{minipage}[t]{0.5\linewidth}
% % \begin{xframedexample}[caption={Example \newline\Opt{ignore-last-descender}\Opt{=false}},result=true,xframed={margin=5pt}]
% % \xframedsetup{%
% %    ignore-last-descender=false}
% % \begin{xframed}
% %   descender not in line
% % \end{xframed}
% % \begin{xframed}
% %   descender in line: skip
% % \end{xframed}
% % \end{xframedexample}
% % \end{minipage}
% % \end{center}
% 
% The next example demonstrate the option \Opt{ignore-last-skip}.
% % \begin{center}
% % \captionsetup{format=plain}
% % \noindent\begin{minipage}[t]{0.5\linewidth}
% % \begin{xframedexample}[caption={Example\newline \Opt{ignore-last-skip}\Opt{=true}},result=true,xframed={margin=5pt}]
% % \xframedsetup{%
% %    ignore-last-skip=true}
% % \begin{xframed}
% %   \begin{itemize}
% %    \item foo bar
% %  \end{itemize}
% % \end{xframed}
% % \end{xframedexample}
% % \end{minipage}%
% % \begin{minipage}[t]{0.5\linewidth}
% % \begin{xframedexample}[caption={Example \newline\Opt{ignore-last-skip}\Opt{=false}},result=true,xframed={margin=5pt}]
% % \xframedsetup{%
% %    ignore-last-skip=false}
% % \begin{xframed}
% %   \begin{itemize}
% %    \item foo bar
% %  \end{itemize}
% % \end{xframed}
% % \end{xframedexample}
% % \end{minipage}
% % \end{center}
% 
% 
% 
% \section{Breaking across pages}\label{chap:break}
% \begin{Note}
% This isn't implemented yet!
% \end{Note}
% 
% It became very popular to have frames which automatic break across pages.
% As often said my first package can do this. Because \Pack{xframed} shall
% become the  successor of \Pack{mdframed}, I implement it too. However
% the algorithm differs from the previous one. At the end of the day both
% are using \Cmd{vsplit}.
% 
% 
% \ExplOpt[true]{allow-breaking}%bool-option
% To decide whether a break is allowed or not you can use the \Opt{allow-breaking}.
% If you say \Opt{allow-breaking}\texttt{=false} the frame will never break. This
% happens also if you use \Env{xframed} inside floating objects or other boxes. 
% 
% \ExplOpt[\Opt{line-width-top}+\Opt{line-width-bottom}+2\string\baselineskip]{minimum-space}
% When you start the environment \Env{xframed} you can specify
% the minimum space before the first split occurs. This height is
% controlled by \Opt{minimum-space}. 
% 
% \ExplOpt{split-skip*,split-skip-top,split-skip-bottom}%skip keys
% The splitting leads always to added space. The space
% before and after a split. The option \Opt{split-skip-top}
% controls the distance between the top of the page and the splitted
% material, whereby \Opt{split-skip-top} is part of the frame. The
% option \Opt{split-skip-bottom} does the same for the end of
% a splitted frame. 
% 
% 
% \ExplOpt{title,foot}%stringoptions
% I explained the options \Opt{first-title,last-foot}. If a frame is splitted
% you can specify the a title and a foot for all splitted frames. However 
% the options \Opt{first-title,last-foot} don't loose there meaning.
% These options are inspired by \Pack{longtable}.
% 
% \section{Developer Info}\label{chap:developer-info}
% 
% The following lines provide some notes for developers and advanced users. 
% 
% As explained in the introduction these package uses the new
% language \Pack{expl3}. So if you have a look at the \Pack{sty} file
% you will see the new syntax. Maybe the syntax is new for you, but
% I provides self-explaining function names which should help you.
% 
% However instead of the normal \TeX or \LaTeX  commands \Cmd{box} or \Cmd{setbox}
% I am using the modul \Pack{l3coffin}. So all parts are saved as coffins. Of course after
% all expansion you have a simple box.
% 
% It's also important to know that \Pack{xframed} does all the computation
% of length etc. on the \LaTeXe\ site. This is easier to support different
% \Opt{frame-method}. 
% 
% At the begin of every environment the package writes the following information 
% to the log file:
% \begin{xframedexample}[caption={Info dimension},result=false,]
% .................................................
% . xframed info 58
% . 
% .  dimension of the current page
% .  height = 591.53027pt = 20.78991 cm
% .  used = 11.0pt = 0.38661 cm
% .  free = 580.53027pt 20.40331 cm
% .  request = 27.20001pt = 0.95597 cm
% .  request is provided by the option: minimum-space
% .................................................
% \end{xframedexample}
% 
% It helps you to setup your environment. 
% 
% \ExplOpt{developer-info}%bool-option
% Next to the information to the \texttt{log} file
% I provided some helper methods which will be displayed
% if you set \Opt{developer-info} to \texttt{true}.
% An example is shown at the title page. The following
% happens if you use this options
% \begin{itemize}
%  \item The output is done 
%    by \verb+\coffin_display_handles:Nn ##1 { blue!70!black }+\ 
%   instead of \verb+\box_use:N+ 
%   So you can provide other coffins which can be joined. 
%  \item  It shows you all defined TikZ nodes, if TikZ is in use.
%  \item More information are written in the \texttt{log} file.
% \end{itemize}
% 
% \ExplCmd{xframedprintalloption}[\OArgs[property]]
% If you want to controll whether all options are corectly passed you can print out the
% option by the provided user commands \Cmd{showxframendskip}, \Cmd{showxframendlength}
% or \Cmd{showxframendcolor}. However this is only useful for one or two options. The 
% \Cmd{xframedprintalloption} closed this gap. It prints all option inside a \Env{longtable} with
% three columns. If you don't use the optional argument all \texttt{skip},
% \texttt{length} and \texttt{color} options are printed. 
% With the help of the optional argument you can specify which option shall be printed. 
% 
% \begin{xframedexample}[caption={Example \Cmd{xframedprintalloption}\OArgs[skip]},result=true,]
% \begin{xframed}[margin=1cm,skip=1cm,]
%  \xframedprintalloption[skip]
% \end{xframed}
% \end{xframedexample}
% 
% 
% 
% \begin{xframedexample}[caption={Example \Opt{developer-info}},result=true,]
%  \begin{xframed}[developer-info=true,margin=1cm,skip=1cm,%
%   first-title={Sheldon Cooper Quote},%
%   last-foot={End Sheldon Cooper Quote}]
%   You know, I'm given to understand that there's an entire 
%   city in Nevada designed specifically to help people like 
%   Howard forget their problems. They can replace them with
%   new problems, like alcoholism, gambling addiction and 
%   sexually transmitted diseases.   
%  \end{xframed}
% \end{xframedexample}
% 
% \section{Examples}\label{chap:examples}
% Text 
% 
% \appendix
% \section{Appendix}\label{chap:appendix}
% \subsection{Thanks}
% Text 
% \subsection{Bugs}
% Text 
% 
% \subsection{ToDo}
% \ExplOpt{twoside-mode}%bool-option
% \section{Revision history}
% 
% \minisec{May 5 2013}
% \begin{itemize}
%  \item alpha status
% \end{itemize}
%
%
%
%\end{documentation}
%
% \clearpage
%
%\begin{implementation}
%
%\section{\pkg{\jobname} Implementation}
%
%
% %^^A=======================================================================
% %^^A NEW FILE
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%    
%    \begin{macrocode}
%<@@=xframed>
%    \end{macrocode}
%
%    \begin{macrocode}
%%
%% This is file `xframed.sty',
%% ----------------------------------------------------------------
%% 
%% Author's name: Marco Daniel
%% License type: lppl
%% 
%% ===========================================================
%% ===== Currently the package has a pre-pre-alpha-status ====
%% ===========================================================
%% 
%%  Copyright (c) 2013 Marco Daniel
%% 
\RequirePackage{expl3}
\GetIdInfo$Id: xframed.dtx 13 2012-06-08 14:11:22Z marco $
          {package xframed}

\ProvidesExplPackage {xframed} {2013/06/21} {0.01 ALPHA} {package xframed}
%%============================================%%
%%============================================%%
%%============================================%%
%%============================================%%
\@ifpackagelater { expl3 } { 2011/09/05 }
  { }
  {
    \PackageError { xframed } { Support~package~expl3~too~old. }
      {
        You~need~to~update~your~installation~of~the~bundles~'l3kernel'~and~
        'l3packages'.\\
        Loading~xframed~will~abort!
      }
    \tex_endinput:D
  }
%%============================================%%
%%============================================%%
%%============================================%%
%%============================================%%
\RequirePackage{xcolor}%needed to display developer Info
\ExplSyntaxOff
 \RequirePackage{tikz}
 \usetikzlibrary{backgrounds,shadows,calc,positioning,shapes.misc}
\ExplSyntaxOn
\RequirePackage{lengthconvert}%as long as regexpatch has alpha status
\RequirePackage{longtable}%needed to display developer Info
\RequirePackage{etoolbox}%as long as regexpatch has alpha status
%%============================================%%
%%============================================%%
%%============================================%%
%%============================================%%
\cs_new_protected:Npn \@@__load_check:n #1 {
    \IfFileExists {#1.sty}
      { \RequirePackage{#1} }
      { \msg_error:nnx { xframed } { package-not-available } {#1} }
}

\clist_map_function:nN
  { zref-abspage , xparse , l3keys2e  }
    \@@__load_check:n

\cs_new_protected:Npn \@@__load_deffiles:n #1 {
    \IfFileExists {xframed-#1.def}
      { \input{xframed-#1.def} }
      { \msg_error:nnx { xframed } { def-not-available } {#1} }
}
\msg_new:nnnn { xframed } { def-not-available }
  { File~xframed-'#1'.def~is~not~available. }
  {
    The~file~xframed-#1-.def~is~not available\\
    but~xframed~needs~the~file~.\\
    I~guess~you~installed~xframed~wrong.
  }

%%============================================%%
%%============================================%%
%%============================================%%
%%============================================%%
%!input all new variables
\@@__load_deffiles:n { initial }
%!input dim/skip functions
\@@__load_deffiles:n { dim }
%!input helper functions
\@@__load_deffiles:n { funct }
%!input development functions
\@@__load_deffiles:n { dev }
%!input messages
\@@__load_deffiles:n { msg }
%!input user keys
\@@__load_deffiles:n { keys }
%!input title-foot-coffin-setup
\@@__load_deffiles:n { titlefoot }
%!input split
\@@__load_deffiles:n { split }
%!input drawing method default
\@@__load_deffiles:n { default }
%!input user commands
\@@__load_deffiles:n { user }
%%============================================%%
%%============================================%%
%%============================================%%
%%============================================%%
\cs_new_protected:Npn \@@__load_ifrequested:n #1 {
 \bool_if:cT { l__@@_#1_bool }
  {
    \IfFileExists {xframed-#1.def}
      { \input{xframed-#1.def} }
      { \msg_error:nnx { xframed } { def-not-available } {#1} }
  }      
}
\@@__load_ifrequested:n { listings }
\@@__load_ifrequested:n { minted   }
\@@__load_ifrequested:n { tikz     }
\@@__load_ifrequested:n { pstricks }
\@@__load_ifrequested:n { theorem  }
\@@__load_ifrequested:n { mdframed }
%%============================================%%
%%============================================%%
%%============================================%%
%%============================================%%
\@@__developer_tools:
%%============================================%%
%%============================================%%
%%============================================%%
%%============================================%%



% Define user environment

\NewDocumentEnvironment { xframed } { O{} }
 {
 \group_begin:
   \xframedsetup { #1 }
   \@@__start_environment:n 
    { 
     \@@__get_length:n
      {
       minimum-space
      }
    }
   \@@__environment_precode:
    \vcoffin_set:Nnw   \l__@@_main_coffin
                     { \l__@@_coffin_width_dim }
     \@@_prevent_firstindent:
     \@@__environment_inner_precode:
     \@@__inner_head:
 }
 {
    \@@__environment_inner_postcode:
    \vcoffin_set_end:
  \@@__set_list:
    \@@__environment_postcode:  
  \@@__set_endlist:
  \group_end:
 }

\cs_new:Nn \@@_prevent_firstindent: 
 {
  \@afterindentfalse\@afterheading
 }

\cs_new:Nn \@@__inner_head:
 {
    \tl_if_blank:VF \l__@@_head_tl 
     {
     \group_begin:
       \tl_use:N \l__@@_headprecode_tl
       \color
          {
           \@@__get_color:n { head-font-color }
          }
       \tl_use:N \l__@@_head_font_tl
       \tl_use:N \l__@@_head_tl
       \tl_use:N \l__@@_headpostcode_tl
     \group_end:
     }
 }


%%Not recommended
\cs_new_nopar:Npn \xframeddivide
 {
    \@@__environment_head_postcode:
    \vcoffin_set_end:
    \coffin_set_eq:NN \l__@@_head_coffin \l__@@_main_coffin
    \bool_set_true:N \l__@@_head_bool
    \vcoffin_set:Nnw   \l__@@_main_coffin
                      { \l__@@_coffin_width_dim }
     \@@__environment_afterhead_precode:
 }

\cs_new:Npn \@@__environment_afterhead_precode: {}

\cs_new:Npn \@@__environment_head_postcode: {}

\cs_new:Npn \@@__environment_precode:
 {
  \@@__developer_tools:
  %%\@@__minimum_space:
  \@@__test_if_splittable:
  \@@__calculate_width:
  \@@__declare_footnotes:
  \@@__frame_linewidth:
  \tl_use:N \l__@@_codebefore_tl
 }

\cs_new:Npn \@@__calculate_width:
 {
  \dim_set:Nn \l__@@_coffin_width_dim { \@@__get_length:n { width } }
  \clist_map_inline:nn
    {
     margin-left , line-width-left ,  inner-margin-left , 
     inner-margin-right , line-width-right , margin-right
    }
    {
     \dim_sub:Nn \l__@@_coffin_width_dim
           {
            \@@__get_length:n { ##1 }
           }
    }
 }

 
\cs_new:Npn \@@__declare_footnotes:
 {
  %% START
   \cs_set:Npn \@mpfn { mpfootnote }
  %% set the counter output
   \cs_set:Npn \thempfn { \thempfootnote }
  %%reset counter
   \int_set_eq:NN \c@mpfootnote \c_zero
  %%
   \cs_set_eq:NN \@footnotetext \@mpfootnotetext
 }

\cs_new:Npn \@@__environment_inner_precode:
 {
  \skip_vertical:n { - \parskip }
  \tl_use:N \l__@@_main_font_tl
  \color { \@@__get_color:n { font-color } }
  \tl_use:N \l__@@_codebegin_tl
 }

\cs_new:Npn \@@__environment_inner_postcode:
 {
  \@@__ignore_last_skip:
  \@@__ignore_last_descenders:
  \tl_use:N \l__@@_codeend_tl
 }

\cs_new:Npn \@@__ignore_last_skip:
 {
  \bool_if:NT \l__@@_ignore_lastskip_bool
   {
    \par \tex_unskip:D
    \skip_vertical:N \tex_lastskip:D
   }
 }


%%at the moment I need the interface to LaTeX2e
\cs_new:Npn \@@__ignore_last_descenders:
 {
  \bool_if:NT \l__@@_descenders_bool
    {
%    \par\strut\par
%    \unskip\unskip\setbox0=\lastbox
%    \vspace*{\dimexpr\ht\strutbox-\baselineskip\relax}
    \par
    \strut
    \par \tex_unskip:D \tex_unskip:D
    \setbox0=\tex_lastbox:D
    \skip_vertical:n { 0.7 \tex_baselineskip:D - \tex_baselineskip:D }
    }
 }


\cs_new:Npn \@@__environment_postcode:
 {
%  \@@__check_title_first:
  \@@_check_footnotes:
  \@@__title:
  \@@__foot:
  \@@__coffin_output: 
  \tl_use:N \l__@@_codeafter_tl
  \skip_vertical:n { - \parskip }
 }


\cs_new:Npn \@@_check_footnotes:
 {
  \box_if_empty:NTF \@mpfootins
    {
     \@@__msg_log:n { no~footnotes~presented }
    }
    {
    \@@__msg_log:n { footnotes~are~found }
    %%Save the footnoterule inside a coffin
    \vcoffin_set:Nnn   \l__@@_temp_coffin
                     { \l__@@_coffin_width_dim   }
                     { 
                      \skip_vertical:n 
                          { 
                           \@@__get_skip:n { footnote-distance }
                          }
                      \@@_footnote_rule: 
                      \vbox_unpack_clear:N \@mpfootins
                     }
    %%Join main coffin with footnote-rule coffin
    \coffin_join:NnnNnnnn 
      \l__@@_main_coffin {b}{l}
      \l__@@_temp_coffin {t}{l}
      { 0pt }{ 0pt }
    %%reset structure of main coffin:
    \@@__coffin_restructure:N   \l__@@_main_coffin
    }
 }

\cs_new:Npn \@@_footnote_rule:
 {
  \tex_kern:D \c_zero_skip
  \tex_hrule:D
    width   \@@__get_length:n { footnote-line-length }
    height  \@@__get_length:n { footnote-line-width }
   \scan_stop:
  \tex_kern:D 2.6 pt
 }
 
\cs_new:Nn \@@__frame_linewidth:
 {
  \@@__test_linewidth:nnn 
     { topline } { length } { line-width-top }
  \@@__test_linewidth:nnn 
     { leftline } { length } { line-width-left }
  \@@__test_linewidth:nnn 
     { rightline } { length } { line-width-right }
  \@@__test_linewidth:nnn 
     { bottomline } { length } { line-width-bottom }
 }

 
\cs_new:Npn \@@__coffin_output:
 {
  \@@__coffin_restructure:N \l__@@_temp_coffin 
  \@@__coffin_restructure:N \l__@@_main_coffin
  \tl_set_eq:NN \l__xframed_temptitle_tl \l__xframed_firsttitle_tl
  \tl_set_eq:NN \l__xframed_tempfoot_tl  \l__xframed_lastfoot_tl
  \__xframed__title:
  \__xframed__foot:
  % %Add vertical space to main coffin
  % \vcoffin_set:Nnn   
  %     \l__@@_main_coffin
  %   { \l__@@_coffin_width_dim }
  %   {
  %    \@@__offinterlineskip:
  %    \skip_vertical:n { \@@__get_length:n { inner-top-margin } }
  %    \vbox_unpack_clear:N \l__@@_main_coffin
  %    \skip_vertical:n { \@@__get_length:n { inner-bottom-margin } }
  %   }
  \dim_set:Nn \l__@@_maincoffin_htdp_dim
    {
     \coffin_ht:N \l__@@_main_coffin + 
     \coffin_dp:N \l__@@_main_coffin
    }     
  \@@__coffin_output_aux:
 }

\cs_new:Npn \@@__coffin_output_aux:
 {
  \@@__test_if_splittable:
  \bool_if:NT \l__@@_allowbreaking_bool { \@@_needed_height: }
  \@@__output_and_draw:
 }


\cs_new:Npn \@@_needed_height:
 {
  \dim_set:Nn \l__@@_computed_coffin_height_dim
          {
           \l__@@_maincoffin_htdp_dim
           +
           \l__@@_title_htdp_dim       
           +
           \l__@@_foot_htdp_dim
          }
  \@@__frame_linewidth:  
  \clist_map_inline:nn
    {
     extra-skip-above , line-width-top , line-width-bottom ,
     inner-top-margin, inner-bottom-margin , line-width-title ,
     line-width-foot 
    }
    {
     \dim_add:Nn \l__@@_computed_coffin_height_dim
           {
            \@@__get_length:n { ##1 }
           }
    }
  \dim_compare:nNnTF
    { \l__@@_computed_coffin_height_dim } < { \l__@@_free_vspace_dim }
    %break needed
    { \bool_set_false:N \l__@@_allowbreaking_bool }
    %no break needed
    { \bool_set_true:N  \l__@@_allowbreaking_bool }    
  \msg_log:n
    {
     xframed~info~\msg_line_number:\\\\
     \ coffin~dimension =~\dim_use:N \l__@@_computed_coffin_height_dim\ =
            \ \@@__convert:n{\l__@@_computed_coffin_height_dim} \\
     \ used~=~\dim_use:N \tex_pagetotal:D\ =
            \ \@@__convert:n{\tex_pagetotal:D} \\
     \ free~=~\dim_use:N \l__@@_free_vspace_dim\ =
            \ \@@__convert:n{\l__@@_free_vspace_dim} 
    }    
 }


 \tex_endinput:D
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</package>
%    \end{macrocode}
%
%
% %^^A=======================================================================
% %^^A NEW FILE
%    \begin{macrocode}
%<*package-default>
%    \end{macrocode}
%    
%    \begin{macrocode}
%<@@=xframed>
%    \end{macrocode}
%
%    \begin{macrocode}
%%=======================================================%%
%% file to define all basic draw functions using \rule   %%
%%=======================================================%%




\cs_new:Nn \@@__draw_default_frame:
 {
  \begin{tikzpicture}[remember~picture]    
   %%Inner part -- defines node xframed-inner
   \@@__default_innerpart:
   %%title part -- defines node xframed-title
   \@@__default_titlepart:
   %%foot part -- defines node xframed-foot  
   \@@__default_footpart:
   %%%%%%%%%
   %Outer part -- defines node xframed-outer
   \@@__default_drawframe:    
  %\pgfnodealias{xframed-outer}{xframed-inner}
   %use the correct bounding box
   \pgfresetboundingbox\useasboundingbox%
     ($(xframed-outer.south~west)+(-\@@__get_length:n { margin-left },0)$) 
       rectangle
     ($(xframed-outer.north~east)+( \@@__get_length:n { margin-right },0)
       +(0,\@@__get_length:n { extra-skip-above })$) ;
      %Show development tools
   %%User hook
   \tl_use:N \l__@@_posttikz_tl   
   \l__@@_singletikz_tl
   %%xframed-developer info      
   %\@@__nodepoints_development:
  \end{tikzpicture} 
%%%%  \@@__all_option_output:
 }
 
\cs_new:Nn \@@__default_innerpart:
 {
  \begin{scope}
    \tikzset{every~node/.style={inner~sep=0pt,outer~sep=0pt,}}      
    \node[](xframed-inner)
      {
       \hbox:n{} \skip_horizontal:n { \@@__get_length:n { inner-margin-left } }
       \@@__display_coffins:N \l__@@_main_coffin 
       \skip_horizontal:n { \@@__get_length:n { inner-margin-right } } \hbox:n{} 
      };        
  \end{scope}
 }
 
\cs_new:Nn \@@__default_titlepart:
 {
  \tl_if_blank:VTF \l__@@_firsttitle_tl
    {
     \pgfnodealias{xframed-title}{xframed-inner} 
    } 
    {
    \begin{scope}
      \tikzset{every~node/.style={inner~sep=0pt,outer~sep=0pt,}}
      \node[anchor=south,
       yshift= \@@__get_length:n { line-width-title } ] (xframed-title) at (xframed-inner.north)
        {
         \hbox:n{} \skip_horizontal:n { \@@__get_length:n { inner-margin-left } }
         \@@__display_coffins:N \l__@@_title_coffin 
         \skip_horizontal:n { \@@__get_length:n { inner-margin-right } } \hbox:n{} 
        };
        
    \end{scope}
    } 
 } 
\cs_new:Nn \@@__default_footpart:
 {
  \tl_if_blank:VTF \l__@@_lastfoot_tl
    {
     \pgfnodealias{xframed-foot}{xframed-inner}
    }
    {
     \begin{scope}
       \tikzset{every~node/.style={inner~sep=0pt,outer~sep=0pt,}}     
       \node[anchor=north,
        yshift= {-\@@__get_length:n { line-width-foot }}, 
        ] (xframed-foot) at (xframed-inner.south)
         {
          \skip_horizontal:n { \@@__get_length:n { inner-margin-left } }
          \@@__display_coffins:N \l__@@_foot_coffin
          \skip_horizontal:n { \@@__get_length:n { inner-margin-right } } \hbox:n{} 
         };
     \end{scope}
    } 
 } 

\cs_new:Nn \@@__default_drawframe:
 {
  \begin{scope}[on~background~layer]
    %%Draw the main frame
    \coordinate (fxx) at %fxx=left bottom
             ($(xframed-foot.south~west)+(-\@@__get_length:n { line-width-left },-\@@__get_length:n { line-width-bottom })$); 
    \coordinate (fyy) at %fyy=right top
             ($(xframed-title.north~east)+(\@@__get_length:n { line-width-right },\@@__get_length:n { line-width-top })$);
    \tikzset{every~node/.style={inner~sep=0pt,outer~sep=0pt,}}      
    \node[anchor=south,
           yshift= -\@@__get_length:n { line-width-bottom },
           xshift= .5*\@@__get_length:n { line-width-right }-.5*\@@__get_length:n { line-width-left }, ] 
         (xframed-outer) at (xframed-foot.south)
         {\tikz\path(fxx) rectangle (fyy);};
    \clip[xframed/outer~arc](xframed-outer.south~west) rectangle (xframed-outer.north~east);
    \@@__default_drawframe_lines:
    \@@__default_drawframe_titlefoot:
  \end{scope}
 }
\cs_new:Nn \@@__default_drawframe_lines:
 {
  %left line
    \path[fill = \@@__get_color:n { line-color-left }] 
     (xframed-outer.north~west) --  (xframed-outer.south~west) -- (xframed-inner.center) --cycle;
   %right line
    \path[fill = \@@__get_color:n { line-color-right }] 
     (xframed-outer.north~east) --  (xframed-outer.south~east) -- (xframed-inner.center) --cycle;
  %top line
    \path[fill = \@@__get_color:n { line-color-top }] 
     (xframed-outer.north~east) --  (xframed-outer.north~west) -- (xframed-inner.center) --cycle;
   %bottom line
    \path[fill = \@@__get_color:n { line-color-bottom }] 
     (xframed-outer.south~east) --  (xframed-outer.south~west) -- (xframed-inner.center) --cycle;   
 } 

\cs_new:Nn \@@__default_drawframe_titlefoot:
 {
  \begin{scope}
   %inner frame
     \clip[xframed/inner~arc] (xframed-foot.south~west) rectangle (xframed-title.north~east);
     \path[xframed/bg] (xframed-foot.south~west) rectangle (xframed-title.north~east);
   %draw title componente (1) title (2) foot rule:
     \tl_if_blank:VF \l__@@_firsttitle_tl
       {
        \path[xframed/title~bg] (xframed-title.south~west) rectangle (xframed-title.north~east);
        \bool_if:NT \l__@@_footline_bool
         {
          \path[xframed/title~rule]    
                 ([yshift= .5*\@@__get_length:n { line-width-foot }]xframed-inner.north~west) -- 
                 ([yshift= .5*\@@__get_length:n { line-width-foot }]xframed-inner.north~east);  
         }
       }
   %draw foot componente (1) foot (2) foot rule:
     \tl_if_blank:VF \l__@@_lastfoot_tl
       {
        \path[xframed/foot~bg] (xframed-foot.south~west) rectangle (xframed-foot.north~east);
        \bool_if:NT \l__@@_footline_bool
         {
          \path[xframed/foot~rule]    
                 ([yshift= -.5*\@@__get_length:n { line-width-foot }]xframed-inner.south~west) -- 
                 ([yshift= -.5*\@@__get_length:n { line-width-foot }]xframed-inner.south~east);  
         }
       }
  \end{scope}    
 }

\tex_endinput:D
%%%%%%%%%%
%DEVELOPER INFO
%%%%%%%%%%
\cs_new:Nn \@@__nodepoints_development:
 {
  \bool_if:NT \l__@@_developer_info_bool
   {
    \begin{scope}
     %%%%%Inner nodes
     \@@__nodepoints_inner_development:
     %%%%%title nodes
     \@@__nodepoints_title_development:
     %%%%%foot nodes
     \@@__nodepoints_foot_development:
     %%%%%Outer nodes  
     \@@__nodepoints_outer_development:
     %%%%%length     
     \@@__outerlength_development:
    \end{scope}
   }
 }
 
 \cs_new:Nn \@@__nodepoints_inner_development:
  {
   \fill[red!70!black] (xframed-inner.north~west) circle (2pt) 
      node[above=0.5cm,font=\footnotesize\ttfamily] {xframed-inner.north~west}; 
   \fill[red!70!black] (xframed-inner.north~east) circle (2pt) 
      node[above=0.5cm,font=\footnotesize\ttfamily] {xframed-inner.north~east}; 
   \fill[red!70!black] (xframed-inner.south~west) circle (2pt) 
      node[below=0.5cm,font=\footnotesize\ttfamily] {xframed-inner.south~west}; 
   \fill[red!70!black] (xframed-inner.south~east) circle (2pt) 
      node[below=0.5cm,font=\footnotesize\ttfamily] {xframed-inner.south~east};
   \fill[red!70!black] (xframed-inner.center) circle (2pt) 
      node[draw,rectangle,fill=yellow,above=0.5cm,font=\footnotesize\ttfamily] {xframed-inner.center};
  }

 \cs_new:Nn \@@__nodepoints_outer_development:
  {
   \fill[blue!70!black] (xframed-outer.north~west) circle (2pt) 
      node[above=0.75cm,font=\footnotesize\ttfamily] {xframed-outer.north~west}; 
   \fill[blue!70!black] (xframed-outer.north~east) circle (2pt) 
      node[above=0.75cm,font=\footnotesize\ttfamily] {xframed-outer.north~east}; 
   \fill[blue!70!black] (xframed-outer.south~west) circle (2pt) 
      node[below=0.75cm,font=\footnotesize\ttfamily] {xframed-outer.south~west}; 
   \fill[blue!70!black] (xframed-outer.south~east) circle (2pt) 
      node[below=0.75cm,font=\footnotesize\ttfamily] {xframed-outer.south~east};
   \fill[blue!70!black] (xframed-outer.center) circle (2pt) 
      node[draw,rectangle,fill=yellow,below=0.5cm,font=\footnotesize\ttfamily] {xframed-outer.center};
  }

 \cs_new:Nn \@@__nodepoints_title_development:
  {
   \tl_if_blank:VF \l__@@_firsttitle_tl
     {
       \fill[green!70!black] (xframed-title.north~west) circle (2pt) 
          node[above=0.5cm,font=\footnotesize\ttfamily] {xframed-title.north~west}; 
       \fill[green!70!black] (xframed-title.north~east) circle (2pt) 
          node[above=0.5cm,font=\footnotesize\ttfamily] {xframed-title.north~east}; 
       \fill[green!70!black] (xframed-title.south~west) circle (2pt) 
          node[below=0.5cm,font=\footnotesize\ttfamily] {xframed-title.south~west}; 
       \fill[green!70!black] (xframed-title.south~east) circle (2pt) 
          node[below=0.5cm,font=\footnotesize\ttfamily] {xframed-title.south~east};
       \fill[green!70!black] (xframed-title.center) circle (2pt) 
          node[draw,rectangle,fill=yellow,above=0.5cm,font=\footnotesize\ttfamily] {xframed-title.center};
     }
  }

 \cs_new:Nn \@@__nodepoints_foot_development:
  {
   \tl_if_blank:VF \l__@@_lastfoot_tl
    {
      \fill[green!70!black] (xframed-foot.north~west) circle (2pt) 
         node[above=0.5cm,font=\footnotesize\ttfamily] {xframed-foot.north~west}; 
      \fill[green!70!black] (xframed-foot.north~east) circle (2pt) 
         node[above=0.5cm,font=\footnotesize\ttfamily] {xframed-foot.north~east}; 
      \fill[green!70!black] (xframed-foot.south~west) circle (2pt) 
         node[below=0.5cm,font=\footnotesize\ttfamily] {xframed-foot.south~west}; 
      \fill[green!70!black] (xframed-foot.south~east) circle (2pt) 
         node[below=0.5cm,font=\footnotesize\ttfamily] {xframed-foot.south~east};
      \fill[green!70!black] (xframed-foot.center) circle (2pt) 
         node[draw,rectangle,fill=yellow,above=0.5cm,font=\footnotesize\ttfamily] {xframed-foot.center};
    } 
  }
 
\cs_new:Nn \@@__outerlength_development:
 {
  \draw[latex-latex] (xframed-outer.east)  --++ ( \@@__get_length:n { margin-right },0) ;
  \draw[latex-latex] (xframed-outer.west)  --++ (-\@@__get_length:n { margin-left }, 0) ;
  \draw[latex-latex] (xframed-outer.north) --++ ( 0 , \@@__get_skip:n { skip-above }  ) ;
  \draw[latex-latex] (xframed-outer.south)  --++ ( 0 , -\@@__get_skip:n { skip-below } ) ;
 }

 



%    \end{macrocode}
%
%
%    \begin{macrocode}
%</package-default>
%    \end{macrocode}
%
% %^^A=======================================================================
% %^^A NEW FILE
%    \begin{macrocode}
%<*package-dev>
%    \end{macrocode}
%    
%    \begin{macrocode}
%<@@=xframed>
%    \end{macrocode}
%
%    \begin{macrocode}
%%=======================================================%%
%% file to define all development functions              %%
%%=======================================================%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                  Testing if development info requested                 %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\cs_new:Npn \@@__msg_log:n #1 {}

\cs_new:Npn \@@__developer_tools:
 {
  \bool_if:NT \l__@@_developer_info_bool
    {%developer info true 
     %print coffin coordinates
     \cs_set:Npn \@@__display_coffins:N ##1
       {
        \coffin_display_handles:Nn ##1 { blue!70!black }
       }
     %print extra information to log file  
     \cs_set:Npn \@@__msg_log:n ##1 
      { 
       \msg_log:n { xframed~developer~info~line~
                    \msg_line_number:\\\\##1
                  }
      }
    }
 }
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                    Print all options in a longtable                    %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cs_new:Nn \@@__all_option_output:
 {
  \tl_set:Nn \l_tmpa_tl 
   {
    \group_begin:
    \renewcommand\arraystretch{1.25}
    \begin{longtable}{@{}lll@{}}
      \caption*{Options}\\\hline
     \endhead
      \multicolumn{3}{@{}r@{}}{\ldots}\\\hline
     \endfoot
      \hline
     \endlastfoot
   }
   \tl_put_right:Nn \l_tmpa_tl { \multicolumn{3}{@{}c@{}}{length} \\\hline }
   \tl_put_right:Nn \l_tmpa_tl 
    { 
     \prop_map_inline:Nn  \l__@@_length_option_prop 
       { ##1 & \dim_eval:n { ##2 } & \Convert{##2}  \\ } 
    }
   \tl_put_right:Nn \l_tmpa_tl 
    { \\\hline\multicolumn{3}{@{}c@{}}{skips} \\\hline }
   \tl_put_right:Nn \l_tmpa_tl 
    { 
     \prop_map_inline:Nn  \l__@@_skip_option_prop 
      { ##1 & \skip_eval:n { ##2 } & \Convert{##2} \\ } 
    }
   \tl_put_right:Nn \l_tmpa_tl 
    { \\\hline\multicolumn{3}{@{}c@{}}{color} \\\hline }
   \tl_put_right:Nn \l_tmpa_tl 
    { 
     \prop_map_inline:Nn  \l__@@_color_option_prop 
       { ##1 &  ##2  & \color{ ##2 } ##1  \\ }
    }
   \tl_put_right:Nn \l_tmpa_tl { \end{longtable} \group_end: }
  \tl_use:N \l_tmpa_tl
 }
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                 Print all lenght options in a longtable                %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cs_new:Nn \@@__length_output_aux:
 {
  \tl_set:Nn \l_tmpa_tl 
   { 
    \group_begin:
    \renewcommand\arraystretch{1.25}
    \begin{longtable}{@{}lll@{}}
      \caption*{Length-options}\\\hline
     \endhead
      \multicolumn{3}{@{}r@{}}{\ldots}\\\hline
     \endfoot
      \hline
     \endlastfoot
   }
 \tl_put_right:Nn \l_tmpa_tl 
  { 
   \prop_map_inline:Nn  \l__@@_length_option_prop 
    { ##1 & \dim_eval:n { ##2 } & \Convert{##2}  \\ } 
  }
 \tl_put_right:Nn \l_tmpa_tl { \end{longtable} \group_end: }
 \tl_use:N \l_tmpa_tl
 }
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                  Print all skip options in a longtable                 %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cs_new:Nn \@@__skip_output_aux:
 {
  \tl_set:Nn \l_tmpa_tl 
   { 
    \group_begin:
    \renewcommand\arraystretch{1.25}
    \begin{longtable}{@{}lll@{}}
      \caption*{Skip~options}\\\hline
     \endhead
      \multicolumn{3}{@{}r@{}}{\ldots}\\\hline
     \endfoot
      \hline
     \endlastfoot
   }
 \tl_put_right:Nn \l_tmpa_tl 
  { 
   \prop_map_inline:Nn  \l__@@_skip_option_prop 
    { ##1 & \skip_eval:n { ##2 } & \Convert{##2}  \\ } 
  }
 \tl_put_right:Nn \l_tmpa_tl { \end{longtable} \group_end: }
 \tl_use:N \l_tmpa_tl
 }
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                 Print all color options in a longtable                 %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cs_new:Nn \@@__color_output_aux:
 {
  \tl_set:Nn \l_tmpa_tl 
   { 
    \group_begin:
    \renewcommand\arraystretch{1.25}
    \begin{longtable}{@{}lll@{}}
      \caption*{Color~options}\\\hline
     \endhead
      \multicolumn{3}{@{}r@{}}{\ldots}\\\hline
     \endfoot
      \hline
     \endlastfoot
   }
 \tl_put_right:Nn \l_tmpa_tl 
  { 
   \prop_map_inline:Nn  \l__@@_color_option_prop 
    { ##1 &  ##2  & \color{ ##2 } ##1  \\ } 
  }
 \tl_put_right:Nn \l_tmpa_tl { \end{longtable} \group_end: }
 \tl_use:N \l_tmpa_tl
 }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                     Print single length/skip option                    %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% 
\cs_new:Npn \@@__show_length:n #1
 {
  \dim_set:Nn \l_tmpa_dim { \@@__get_length:n { #1 } }
  \dim_use:N \l_tmpa_dim
 }
\cs_new:Npn \@@__show_skip:n #1
 {
  \skip_set:Nn \l_tmpa_skip { \@@__get_skip:n { #1 } }
  \skip_use:N \l_tmpa_skip
 }    


 \tex_endinput:D
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</package-dev>
%    \end{macrocode}
%
% %^^A=======================================================================
% %^^A NEW FILE
%    \begin{macrocode}
%<*package-dim>
%    \end{macrocode}
%    
%    \begin{macrocode}
%<@@=xframed>
%    \end{macrocode}
%
%    \begin{macrocode}
%%=======================================================%%
%% file to define all needed dim functions               %%
%%=======================================================%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%          All length/skip options are save in a property list           %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%             getting skip options out of the property list              %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  \@@__get_skip:n { <skip option> } 
\cs_new:Npn \@@__get_skip:n #1
 {
  \skip_eval:n 
    { 
     \prop_get:Nn \l__@@_skip_option_prop { #1 }
    }
 }
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%            getting length options out of the property list             %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  \@@__get_length:n { <length option> }
\cs_new:Npn \@@__get_length:n #1
 {
  \dim_eval:n 
    { 
     \prop_get:Nn \l__@@_length_option_prop { #1 }
    }
 }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                add/sub a length option to a given length               %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \@@__length_add:Nn <dimen register> { <length option> }
\cs_new:Npn \@@__length_add:Nn #1 #2
 {
  \dim_add:Nn #1
    {
     \@@__get_length:n { #2 }
    }
 } 
% \@@__length_sub:Nn <dimen register> { <length option> } 
\cs_new:Npn \@@__length_sub:Nn #1 #2
 {
  \dim_sub:Nn #1
    {
     \@@__get_length:n { #2 }
    }
 } 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                        Output a dimension in cm                        %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \@@_convert:n { <dimension> }
\cs_new:Npn \@@__convert:n #1
 {
  \fp_eval:n { round( \dim_to_fp:n { #1 } / 1cm, 5) }~cm
 }



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                    remove glue from a skip register                    %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \@@__get_stretch:Nn <skip register> { <skipexpr> }
\cs_new:Npn \@@__get_stretch:Nn  #1 #2
 {
  \skip_if_finite:nTF { #2 } 
   {
    #1 = \etex_gluestretch:D #2 \scan_stop:
   }
   {
    #1 = \c_zero_skip
   }    
 }
% \@@__get_shrink:Nn <skip register> { <skipexpr> }
\cs_new:Npn \@@__get_shrink:Nn  #1 #2
 {
  \skip_if_finite:nTF { #2 } 
   {
    #1 = \etex_glueshrink:D #2 \scan_stop:
   }
   {
    #1 = \c_zero_skip
   }    
 }
% \@@__remove_skip_glue:Nn <dim register> { <skipexpr> }
\cs_new:Npn \@@__remove_skip_glue:Nn  #1 #2
 {
  \skip_split_finite_else_action:nnNN { #2 } {  } \l_tmpa_dim \l_tmpb_dim
  \skip_set:Nn #1 
     {  
      #2 - \c_zero_dim ~ plus  ~ \l_tmpa_dim 
         - \c_zero_dim ~ minus ~ \l_tmpb_dim
     }
 }


% \@@__maximum_skip:Nn <dim register> { <skipexpr> }
\cs_new:Npn \@@__maximum_skip:Nn  #1 #2
 {
  \skip_split_finite_else_action:nnNN { #2 } {  } \l_tmpa_dim \l_tmpb_dim
  \skip_set:Nn #1 
     {  
      #2 - \c_zero_dim ~ plus  ~ \l_tmpa_dim
         - \c_zero_dim ~ minus ~ \l_tmpb_dim
         + \l_tmpa_dim  
     }
 }


 \tex_endinput:D
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</package-dim>
%    \end{macrocode}
%
% %^^A=======================================================================
% %^^A NEW FILE
%    \begin{macrocode}
%<*package-funct>
%    \end{macrocode}
%    
%    \begin{macrocode}
%<@@=xframed>
%    \end{macrocode}
%
%    \begin{macrocode}
%%=======================================================%%
%% file to define helper functions                       %%
%%=======================================================%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                  restructure a coffin with given width                 %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \@@__coffin_restructure:N <coffing>
\cs_new:Npn \@@__coffin_restructure:N #1
 {
  \vcoffin_set:Nnn #1
                  { \coffin_wd:N \l__@@_main_coffin } 
                  { 
                    \vbox_unpack_clear:N #1
                  } 
 }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                     output of a coffin for a user                      %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \@@__display_coffins:N <coffing>
\cs_new:Npn \@@__display_coffins:N #1
 {
  \box_use:N #1
 }
  
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                set a property  list with prefix xframed                %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \@@__prop_set:Nnn <property list> {<key>} {<value>}
\cs_new_eq:NN \@@__prop_set:Nnn \prop_put:Nnn
\cs_generate_variant:Nn \@@__prop_set:Nnn { Nnx }
\cs_generate_variant:Nn \@@__prop_set:Nnn { cnn }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                  get value of a xframed-property list                  %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \@@__prop_set:Nnn {<xframed property list>} {<key>}
\cs_new:Npn \@@__prop_get:nn #1 #2
 {
  \prop_get:cn { l__@@_#1_option_prop } { #2 } 
 }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                        testing LaTeX2e if tests                        %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%http://tex.stackexchange.com/questions/119736/what-are-the-best-practices-for-programmatic-interaction-between-latex3-and-late
% \@@_if:N <LaTeX2e if test>
\prg_new_conditional:Npnn \@@_if:N #1 {p,T,F,TF}
{
   #1 \prg_return_true: \else: \prg_return_false: \fi:
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                 get value of xframed-property list color               %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cs_new:Npn \@@__get_color:n #1
 {
  \prop_get:Nn \l__@@_color_option_prop { #1 }
 }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%             test the bool flag of line -- if false set 0pt             %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \@@__test_linewidth:nnn {<bool name>}{<prop-list>}{<lenght/skip>}
\cs_new:Npn \@@__test_linewidth:nnn #1 #2 #3
 {
  \bool_if:cF { l__@@_ #1 _bool }
  { 
   \@@__prop_set:cnn 
     { l__@@_ #2 _option_prop }
     { #3 }
     { \c_zero_dim }
  }
 }
 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                      variant of a token list test                      %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%http://tex.stackexchange.com/a/112345/5239
\cs_generate_variant:Nn \tl_if_empty:nTF { f } 


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%            ignore any vbox-warning during splitting proccess           %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\tl_new:N \l__@@_vbadness_tl
\cs_new:Npn \@@__ignore_vbadness:
 {
   \tl_set:Nx \l__@@_vbadness_tl { \int_use:N \tex_vbadness:D }
   \int_set:Nn \tex_vbadness:D { \c_ten_thousand }
   \tex_afterassignment:D \@@__restore_vbadness:
 }
\cs_new:Npn \@@__restore_vbadness:
 {
  \int_set:Nn \tex_vbadness:D { \l__@@_vbadness_tl }
 }

\cs_new_protected:Npn \@@__local_boxdim:
 {
  \dim_set:Nn \tex_boxmaxdepth:D   { \c_zero_dim }
  \dim_set:Nn \tex_splittopskip:D  { \c_zero_dim }
  \dim_set:Nn \tex_splitmaxdepth:D { \c_zero_dim }
 }
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                   LaTeX2e offinterlineskip to LaTeX3                   %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cs_new:Npn \@@__offinterlineskip:
 {
  \dim_set:Nn \tex_baselineskip:D  { - \c_one_thousand \c_one_pt_dim }
  \dim_set:Nn \tex_lineskip:D      { \c_zero \c_one_pt_dim }
  \dim_set:Nn \tex_lineskiplimit:D { \c_max_dim }
 }


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                        Start xframed environment                       %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \@@__start_environment:n {<dimension>}
\cs_new:Npn \@@__start_environment:n #1
 {
  \par
    \@@__enought_room:n { #1 }
  \par
  \dim_compare:nNnF
    { \tex_prevdepth:D } { = } { - \c_one_thousand \c_one_pt_dim }
    {
     \int_set:Nn \l_tmpa_int
      {
       \fp_to_int:n 
         {
          %%\prevdepth as integer in scale points
          (\dim_to_fp:n { \tex_prevdepth:D } * 65536) 
          /
          %%\baselineskip as integer in scale points
          (\dim_to_fp:n { \baselineskip } * 65536) 
          + 
          \c_one
         } 
      }
     \dim_set:Nn \l_tmpa_dim 
      {
       \tex_prevdepth:D - \l_tmpa_int\baselineskip + \topskip
      }  
     \tex_kern:D \l_tmpa_dim 
    }   
 }
% \@@__enought_room:n {<dimension>}
\cs_new:Npn \@@__enought_room:n #1 
 {
  \par
  \group_begin:
    \@nobreakfalse\addpenalty\z@
  \group_end:
  \dim_set_eq:NN \l__@@_free_vspace_dim \tex_pagegoal:D
  \dim_compare:nNnTF
   { \l__@@_free_vspace_dim } = { \c_max_dim } 
   { \dim_set_eq:NN \l__@@_free_vspace_dim \vsize }
   { \dim_add:Nn \l__@@_free_vspace_dim {  - \tex_pagetotal:D } }
  \dim_set:Nn \l_tmpa_dim { #1 }
  %\@@__msg_log:n
  \msg_log:n
    {
     xframed~info~\msg_line_number:\\\\
     \ dimension~of~the~current~page \\
     \ height~=~\dim_use:N \tex_pagegoal:D\ =
            \ \@@__convert:n{\tex_pagegoal:D} \\
     \ used~=~\dim_use:N \tex_pagetotal:D\ =
            \ \@@__convert:n{\tex_pagetotal:D} \\
     \ free~=~\dim_use:N \l__@@_free_vspace_dim\ =
            \ \@@__convert:n{\l__@@_free_vspace_dim} \\
     \ request~=~\dim_use:N \l_tmpa_dim\ =
            \  \@@__convert:n{ \l_tmpa_dim } \\      
     \ request~is~provided~by~the~option:~minimum-space
    }
 \dim_compare:nNnTF
  { \l__@@_free_vspace_dim } < { \l_tmpa_dim } 
  { %not enough space on current page   
    \vfill\eject 
    \dim_set_eq:NN \l__@@_free_vspace_dim \vsize 
  }{}
 }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                      xframed trivlist environment                      %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\cs_new:Npn \@@__trivlist:
 {
  \skip_set:Nn {\topsep}{ \@@__prop_get:nn { skip }{ skip-above } }
  \parsep\parskip
  \@nmbrlistfalse
  \@trivlist
  \labelwidth\z@
  \leftmargin\z@
  \itemindent\z@
  \let\@itemlabel\@empty
  \def\makelabel##1{##1}
 }

\cs_new:Npn \end@@__trivlist:
 {    
  \if@inlabel
    \leavevmode
    \global \@inlabelfalse
  \fi
  \if@newlist
    \@noitemerr
    \global \@newlistfalse
  \fi
  \ifhmode\unskip \par
  \else
    \@inmatherr{\end{\@currenvir}}%
  \fi
  \if@noparlist \else
    \ifdim\lastskip >\z@
      \@tempskipa\lastskip \vskip -\lastskip
      \advance\@tempskipa\parskip \advance\@tempskipa -\@outerparskip
      \vskip\@tempskipa
    \fi
    \addpenalty\@endparpenalty
    \addvspace { \@@__get_skip:n { skip-below } }
    \@endpetrue
  \fi
 }

%
\cs_new_protected:Npn \@@__set_list:
 {
  \@@__trivlist:\item\relax\color_group_begin:
  \color_ensure_current:
 }


\cs_set_protected_nopar:Npn \@@__set_endlist:
    {
     \color_group_end:
     \end@@__trivlist:
    } 



 \tex_endinput:D
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</package-funct>
%    \end{macrocode}
%
% %^^A=======================================================================
% %^^A NEW FILE
%    \begin{macrocode}
%<*package-initial>
%    \end{macrocode}
%    
%    \begin{macrocode}
%<@@=xframed>
%    \end{macrocode}
%
%    \begin{macrocode}
%%=======================================================%%
%% file to initial all new variables needed by xframed   %%
%%=======================================================%%



%new coffins
\coffin_new:N \l__@@_head_coffin
\coffin_new:N \l__@@_main_coffin
\coffin_new:N \l__@@_title_coffin
\coffin_new:N \l__@@_firsttitle_coffin
\coffin_new:N \l__@@_foot_coffin
\coffin_new:N \l__@@_lastfoot_coffin
\coffin_new:N \l__@@_footnotes_coffin


\coffin_new:N \l__@@_draw_coffin

\coffin_new:N \l__@@_temp_coffin
\coffin_new:N \l__@@_two_coffin
\coffin_new:N \l__@@_save_coffin


\coffin_new:N \l__@@_subtitle_coffin
\coffin_new:N \l__@@_subsubtitle_coffin


%new length
\dim_new:N \l__@@_coffin_width_dim

\dim_new:N \l__@@_title_htdp_dim
\dim_new:N \l__@@_firsttitle_htdp_dim
\dim_new:N \l__@@_foot_htdp_dim
\dim_new:N \l__@@_lastfoot_htdp_dim

\dim_new:N \l__@@_maincoffin_htdp_dim

\dim_new:N \l__@@_splitheight_dim


\dim_new:N \l__@@_free_vspace_dim
\dim_new:N \l__@@_computed_coffin_height_dim
\dim_new:N \l__@@_maximum_coffin_height_dim

\dim_new:N \l__@@_tmpa_dim
\dim_new:N \l__@@_tmpb_dim

\box_new:N \l__@@_tmpa_box
\box_new:N \l__@@_tmpb_box

\bool_new:N \l__@@_head_bool

\dim_const:Nn \c_one_pt_dim { 1~pt }


\tl_new:N \l__@@_temptitle_tl
\tl_new:N \l__@@_tempfoot_tl

 \tex_endinput:D
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</package-initial>
%    \end{macrocode}
%
% %^^A=======================================================================
% %^^A NEW FILE
%    \begin{macrocode}
%<*package-keys>
%    \end{macrocode}
%    
%    \begin{macrocode}
%<@@=xframed>
%    \end{macrocode}
%
%    \begin{macrocode}
%%=======================================================%%
%% file to define all allowed keys                       %%
%%=======================================================%%


%!framemethod
\tl_new:N \@@__framemethode_tl
\int_new:N \@@__framemethode_int
\cs_new_protected:Npn \@@__set_framemethod:n #1
 {
   \tl_set:Nx \l_tmpa_tl { \tl_expandable_lowercase:n { #1 } }
   \clist_if_in:noTF { pgf , tikz } { \l_tmpa_tl }
    {
     \tl_set:Nn \@@__framemethode_tl { tikz }
     \int_set_eq:NN \@@__framemethode_int \c_one
    }
    {
     \clist_if_in:noTF { default , tex , latex , none  } { \l_tmpa_tl }
      {
       \tl_set:Nn \@@__framemethode_tl { default }
       \int_set_eq:NN \@@__framemethode_int \c_two
      }
      {
       \clist_if_in:noTF { pstricks , ps , postscript } { \l_tmpa_tl }
        {
         \tl_set:Nn \@@__framemethode_tl { pstricks }
         \int_set_eq:NN \@@__framemethode_int \c_three
        }
        {
         \msg_error:nnx { xframed }{ unknown-option } { \l_tmpa_tl }
        }
      }
    }
 }

 
 \keys_define:nn { xframed }
  {
     frame-method .code:n       = \@@__set_framemethod:n { #1 } ,
     frame-method .initial:n    = tikz                               ,
     no-tikz      .bool_gset:N  = \g_@@_notikz_bool             ,
     no-tikz      .initial:n    = false                              ,
     no-pstricks  .bool_gset:N  = \g_@@_notikz_bool             ,
     no-pstricks  .initial:n    = true                               ,
     default      .code:n       = \@@__set_framemethod:n { default } ,
     default      .value_forbidden:                                  ,
     tikz         .code:n       = \@@__set_framemethod:n { tikz } , 
     tikz         .value_forbidden:                                  ,
  }
%!end framemethod

%!length options
\prop_new:N \l__@@_length_option_prop

\cs_new_protected:Npn \@@__lengthkeys_define:n #1
 {
   \@@__lengthkeys_define_aux:nn #1 \q_stop
 }

\cs_new_protected:Npn \@@__lengthkeys_define_aux:nn #1==#2 \q_stop
 {
   \keys_define:nn { xframed }
    {
      #1 .code:n  =  \@@__prop_set:Nnn \l__@@_length_option_prop
                                  { #1 } {  ##1  }
    }
  \keys_set:nn  { xframed }
   {
     #1 = { #2 }
   }
 }

\clist_map_function:nN
 {
   margin-left             ==  \c_zero_dim      ,
   margin-right            ==  \c_zero_dim      ,
   inner-margin-left       ==  10pt             ,
   inner-margin-right      ==  10pt             ,
   inner-top-margin        ==  5.0pt            ,
   inner-bottom-margin     ==  5.0pt            ,
   line-width-top          ==  0.8pt            ,
   line-width-left         ==  0.8pt            ,
   line-width-right        ==  0.8pt            ,
   line-width-bottom       ==  0.8pt            ,
   line-width-title        ==  0.6pt            ,
   line-width-foot         ==  0.6pt            ,
   arc-inner               ==  5.0pt            ,
   arc-outer               ==  5.0pt            ,
   footnote-line-width     ==  .8pt             ,
   footnote-line-length    ==  1 in             ,
   width                   ==  \linewidth       ,
   title-skip-above        ==  5pt              ,
   title-skip-below        ==  5pt              ,
   foot-skip-above         ==  5pt              ,
   foot-skip-below         ==  5pt              ,
   subtitle-skip-above     ==  5pt              ,
   subtitle-skip-below     ==  5pt              ,
   shadow-size             ==  2pt              ,
   extra-skip-above        ==  \c_zero_dim      ,
   minimum-space           ==  2\baselineskip   ,
   split-skip-top          ==  10pt             ,
   split-skip-bottom       ==  10pt             ,
   footnote-distance       ==  10pt             ,
 } \@@__lengthkeys_define:n


%!meta options
\keys_define:nn { xframed }
 {
   margin                  .meta:n  =
         {
          margin-left               = #1          ,
          margin-right              = #1          ,
         }                                                             ,
   inner-margin            .meta:n  =
         {
          inner-margin-left         = #1          ,
          inner-margin-right        = #1          ,
         }                                                             ,
   skip                    .meta:n  =
         {
          skip-above                =  #1         ,
          skip-below                =  #1         ,

         }                                                             ,
   title-skip              .meta:n  =
         {
          title-skip-above        = #1           ,
          title-skip-below        = #1           ,
         }                                                              ,
   foot-skip               .meta:n  =
         {
          foot-skip-above        = #1           ,
          foot-skip-below        = #1           ,
         }                                                              ,
   split-skip              .meta:n  =
         {
          split-skip-top         = #1           ,
          split-skip-bottom      = #1           ,
         }                                                              ,
   line-width              .meta:n  =
         {
          line-width-top          = #1           ,
          line-width-left         = #1           ,
          line-width-right        = #1           ,
          line-width-bottom       = #1           ,
         }                                                              ,
   line-color              .meta:n  =
         {
          line-color-top          = #1           ,
          line-color-left         = #1           ,
          line-color-right        = #1           ,
          line-color-bottom       = #1           ,
         }                                                              ,
   round-corner            .meta:n  =
         {
          arc-inner               = #1           ,
          arc-outer               = #1           ,
         }                                                              ,
   arc                     .meta:n  =
         {
          arc-inner               = #1           ,
          arc-outer               = #1           ,
         }                                                              ,
  show-all-lines       .meta:n    = 
         {
          top-line                = #1           ,
          left-line               = #1           ,
          bottom-line             = #1           ,
          right-line              = #1           ,
         }                                                               ,
 }
%!end meta options 
 
%!end length options
\prop_new:N \l__@@_skip_option_prop

\cs_new_protected:Npn \@@__skipkeys_define:n #1
 {
   \@@__skipkeys_define_aux:nn #1 \q_stop
 }

\cs_new_protected:Npn \@@__skipkeys_define_aux:nn #1==#2 \q_stop
 {
   \keys_define:nn { xframed }
    {
      #1 .code:n  =  \@@__prop_set:Nnn \l__@@_skip_option_prop
                                  { #1 } { \skip_eval:n { ##1 } }
    }
  \keys_set:nn  { xframed }
   {
     #1 = { #2 }
   }
 }
%!skip option
\clist_map_function:nN
 {
   skip-above              ==  10pt      ,
   skip-below              ==  10pt      ,
   subtitle-skip-above     ==  5pt       ,
   subtitle-skip-below     ==  5pt       ,
 } \@@__skipkeys_define:n
%!end skip options


%!color options
%\cs_new:Npn \@@__use_font_settings:N #1
% {
%  \exp_args:No \color{ \@@__prop_get:nn { color } { #1-font-color} }
%  \tl_use:c {l_@@_#1font_tl
% }
 
\prop_new:N \l__@@_color_option_prop

\cs_new_protected:Npn \@@__colorkeys_define:n #1
 {
   \@@__colorkeys_define_aux:nn #1 \q_stop
 }

\cs_new_protected:Npn \@@__colorkeys_define_aux:nn #1==#2 \q_stop
 {
   \keys_define:nn { xframed }
    {
      #1 .code:n  =  \@@__prop_set:Nnn \l__@@_color_option_prop
                                  { #1 } { ##1 }
    }
  \keys_set:nn  { xframed }
   {
     #1 = { #2 }
   }
 }
\clist_map_function:nN
 {
   line-color-left         ==  black            ,
   line-color-right        ==  black            ,
   line-color-top          ==  black            ,
   line-color-bottom       ==  black            ,
   bg-color                ==  gray!20          ,
   font-color              ==  black            ,
   title-font-color        ==  black            ,
   foot-font-color         ==  black            ,
   head-font-color         ==  black            ,
   title-line-color        ==  black            ,
   title-bg-color          ==  gray!35          ,
   foot-bg-color           ==  gray!35          ,
   foot-line-color         ==  black            ,
   subtitle-font-color     ==  black            ,
   subtitle-line-color     ==  black            ,
   subtitle-bg-color       ==  white            ,
   shadow-color            ==  black!50         ,
 } \@@__colorkeys_define:n
%!end color options

%!font option
\keys_define:nn { xframed }
 {
  font              .tl_set:N  = \l__@@_main_font_tl         ,
  font              .initial:n = \normalfont                      ,
  head-font         .tl_set:N  = \l__@@_head_font_tl         ,
  head-font         .initial:n = \normalfont\sffamily\bfseries    ,
  title-font        .tl_set:N  = \l__@@_title_font_tl        ,
  title-font        .initial:n = \bfseries\sffamily\large         ,
  foot-font         .tl_set:N  = \l__@@_foot_font_tl         ,
  foot-font         .initial:n = \bfseries\sffamily\small         ,
  subtitle-font     .tl_set:N  = \l__@@_subtitle_font_tl     ,
  subtitle-font     .initial:n = \bfseries\sffamily               ,
 }
%!end font option

%!hooks
\keys_define:nn { xframed }
 {
  code-before         .tl_set:N  = \l__@@_codebefore_tl                 ,
  code-after          .tl_set:N  = \l__@@_codeafter_tl                  ,
  code-begin          .tl_set:N  = \l__@@_codebegin_tl                  ,
  code-end            .tl_set:N  = \l__@@_codeend_tl                    ,
  subtitle-before     .tl_set:N  = \l__@@_codebefore_tl                 ,
  subtitle-after      .tl_set:N  = \l__@@_codeafter_tl                  ,
  code-frame-single   .tl_set:N  = \l__@@_code_single_frame_tl          ,
  code-frame-first    .tl_set:N  = \l__@@_code_first_frame_tl           ,
  code-frame-middle   .tl_set:N  = \l__@@_code_middle_frame_tl          ,
  code-frame-last     .tl_set:N  = \l__@@_code_last_frame_tl            ,
  tikz-code-post      .tl_set:N  = \l__@@_posttikz_tl                   ,
  tikz-code-single    .tl_set:N  = \l__@@_singletikz_tl                 ,
  tikz-code-first     .tl_set:N  = \l__@@_firsttikz_tl                  ,
  tikz-code-middle    .tl_set:N  = \l__@@_middletikz_tl                 ,
  tikz-code-last      .tl_set:N  = \l__@@_lasttikz_tl                   ,
  setup-tikz          .code:n    = { \xframedsetuptikz {#1} }                ,
  head-pre-code       .tl_set:N  = \l__@@_headprecode_tl                ,
  head-post-code      .tl_set:N  = \l__@@_headpostcode_tl               ,
  head-post-code      .initial:n = \space                                    ,
  title-pre-code      .tl_set:N  = \l__@@_titleprecode_tl               ,
  title-post-code     .tl_set:N  = \l__@@_titlepostcode_tl              ,
  foot-pre-code       .tl_set:N  = \l__@@_footprecode_tl                ,
  foot-post-code      .tl_set:N  = \l__@@_footpostcode_tl               ,
 }
%!end hooks

%!bool option
\keys_define:nn { xframed }
 {
  top-line              .bool_set:N  = \l__@@_topline_bool         ,
  top-line              .initial:n   = true                             ,
  left-line             .bool_set:N  = \l__@@_leftline_bool        ,
  left-line             .initial:n   = true                             ,
  bottom-line           .bool_set:N  = \l__@@_bottomline_bool      ,
  bottom-line           .initial:n   = true                             ,
  right-line            .bool_set:N  = \l__@@_rightline_bool       ,
  right-line            .initial:n   = true                             ,   
  title-line            .bool_set:N = \l__@@_titleline_bool        ,
  title-line            .initial:n  = true                              ,
  foot-line             .bool_set:N = \l__@@_footline_bool         ,
  foot-line             .initial:n  = true                              ,
  subtitle-line         .bool_set:N = \l__@@_subtitleline_bool     ,
  allow-breaking        .bool_set:N = \l__@@_allowbreaking_bool    ,
  allow-breaking        .initial:n  = true                              ,
  draw-everyline        .bool_set:N = \l__@@_draweveryline_bool    ,
  draw-everyline        .initial:n  = false                             ,
%%!!  footnote-inside not used and not described yet
  footnote-inside       .bool_set:N = \l__@@_footnoteinside_bool   ,
  twoside-mode          .bool_set:N = \l__@@_usetwoside_bool       ,
  shadow                .bool_set:N = \l__@@_shadow_bool           ,
  ignore-last-descender .bool_set:N = \l__@@_descenders_bool       ,
  ignore-last-skip      .bool_set:N = \l__@@_ignore_lastskip_bool  ,
  ignore-last-skip      .initial:n  = true                              ,
  developer-info        .bool_set:N = \l__@@_developer_info_bool   ,
  mdframed              .bool_set:N = \l__@@_mdframed_bool         ,
  minted                .bool_set:N = \l__@@_minted_bool           ,
  listings              .bool_set:N = \l__@@_listings_bool         ,
  tikz                  .bool_set:N = \l__@@_tikz_bool             ,
  tikz                  .initial:n  = true                             ,
  pstricks              .bool_set:N = \l__@@_pstricks_bool         ,
  mdframed              .bool_set:N = \l__@@_mdframed_bool         ,
  theorem               .bool_set:N = \l__@@_theorem_bool          ,
  theorem               .initial:n  = true                             ,
 }
%!end bool options


%!string option
\keys_define:nn { xframed }
 {
  head          .tl_set:N  = \l__@@_head_tl             ,%inside frame
  title         .tl_set:N  = \l__@@_title_tl            ,
  first-title   .tl_set:N  = \l__@@_firsttitle_tl       ,
  foot          .tl_set:N  = \l__@@_foot_tl             ,
  last-foot     .tl_set:N  = \l__@@_lastfoot_tl         ,
 }
%!end string options

%!unknown option
\keys_define:nn { xframed }
 {
  unknown .code:n =
        {
         \msg_error:nnx { xframed } { unknown-option }
                        { \exp_not:V \l_keys_key_tl }
        }
 }
%!end unknown option

\ProcessKeysOptions { xframed }

%!style option
\keys_define:nn { xframed }
 {
  style .code:n =
    {
     \cs_if_exist:cTF { @@_style_#1_user }
      {
       \exp_args:Nf \xframedsetup { \use:c { @@_style_#1_user } }
      }
      {
       \msg_error:nnx { xframed } { unknown-style }
                      { \exp_not:V \l_keys_key_tl }
      }
    }
 }
%!end style option 

% This command is the user interface to setup options.
\NewDocumentCommand \xframedsetup { m }
 {
 \keys_set:nn { xframed } { #1 }
 }

 \tex_endinput:D
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</package-keys>
%    \end{macrocode}
%
% %^^A=======================================================================
% %^^A NEW FILE
%    \begin{macrocode}
%<*package-listings>
%    \end{macrocode}
%    
%    \begin{macrocode}
%<@@=xframed>
%    \end{macrocode}
%
%    \begin{macrocode}
%%=======================================================%%
%% file to support predefined environments with listings %%
%%=======================================================%%
\RequirePackage{listings}
 \tex_endinput:D
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</package-listings>
%    \end{macrocode}
%
% %^^A=======================================================================
% %^^A NEW FILE
%    \begin{macrocode}
%<*package-mdframed>
%    \end{macrocode}
%    
%    \begin{macrocode}
%<@@=xframed>
%    \end{macrocode}
%
%    \begin{macrocode}
%%=======================================================%%
%% file to use xframed instead of mdframed               %%
%%=======================================================%%
 \tex_endinput:D
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</package-mdframed>
%    \end{macrocode}
%
% %^^A=======================================================================
% %^^A NEW FILE
%    \begin{macrocode}
%<*package-minted>
%    \end{macrocode}
%    
%    \begin{macrocode}
%<@@=xframed>
%    \end{macrocode}
%
%    \begin{macrocode}
%%=======================================================%%
%% file to support predefined environments with minted   %%
%%=======================================================%%
\RequirePackage{minted,caption}
\keys_define:nn {xframed-doc-minted }
 {
  caption      .tl_set:N   = \l__@@_minted_caption_tl  ,
  label        .tl_set:N   = \l__@@_minted_label_tl    ,
  minted-opt   .tl_set:N   = \l__@@_minted_minted_tl   ,
  minted-opt   .initial:n  = {linenos=true}            ,
  language     .tl_set:N   = \l__@@_minted_language_tl ,
  language     .initial:n  = latex                     ,
  result       .bool_set:N = \l__@@_minted_result_bool ,
  result       .initial:n  = false                     ,
  xframed      .tl_set:N   = \l__@@_minted_xframed_tl  ,
  hook         .tl_set:N   = \l__@@_minted_hook_tl     ,
}

\NewDocumentCommand \xframedmintedsetup { m }
 {
 \keys_set:nn { xframed-doc-minted } { #1 }
 }

\NewDocumentEnvironment {xframedexample} { O {} }
 {
  \keys_set:nn { xframed-doc-minted } { #1 }
  \group_begin:
   \tl_set:Nx \l__mdxex_temp_tl
    {
     \exp_not:V \l__@@_minted_hook_tl
     \exp_not:N \VerbatimEnvironment
     \exp_not:N \xframedsetup 
      {
       line-color           = brown!70!black   ,
       bg-color             = brown!10!white   ,
       inner-top-margin     = 12pt             ,
       inner-bottom-margin  = 6pt              ,
       title-skip-above     = 6pt              ,
       title-skip-below     = 6pt              ,
       title-bg-color       = brown!15!white   ,
       line-width-top       = 2pt              ,
       margin               = 1cm              ,
      } 
     \tl_if_empty:NTF \l__@@_minted_caption_tl
       {
        \scan_stop:
       }
       {
        \exp_not:N \xframedsetup 
         {
          first-title          = 
            { 
              \exp_not:N \captionsetup { skip = 0pt }
              \exp_not:N \captionof 
                { lstlisting }
                { \exp_not:V \l__@@_minted_caption_tl } 
              \tl_if_empty:NF \l__@@_minted_label_tl
                { 
                  \exp_not:N \label 
                  { lst \exp_not:N : \l__@@_minted_label_tl } 
                }
            }
         }
       }
     \exp_not:n { \begin{xframed} }[ \exp_not:V \l__@@_minted_xframed_tl ]
     % \exp_not:n { \MakePercentComment }
     \exp_not:n { \begin{minted} } [ \l__@@_minted_minted_tl ] 
                                   { \l__@@_minted_language_tl }
    }
   \l__mdxex_temp_tl
 }
 {
    \end{minted}
   % \MakePercentIgnore    
   \end{xframed}
  \group_end:
  \bool_if:NT \l__@@_minted_result_bool { \input{\jobname.pyg} }
}

\RenewDocumentCommand\DeleteFile{m}{}

 \tex_endinput:D
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</package-minted>
%    \end{macrocode}
%
% %^^A=======================================================================
% %^^A NEW FILE
%    \begin{macrocode}
%<*package-msg>
%    \end{macrocode}
%    
%    \begin{macrocode}
%<@@=xframed>
%    \end{macrocode}
%
%    \begin{macrocode}
%%=======================================================%%
%% file to define all needed messanges                   %%
%%=======================================================%%

 
\msg_new:nnn { xframed } { inside-box }
  { 
    You~are~using~the~environment~xframed~inside~a~non~breakable\\
    box.~By~this~the~option~nobreak~is~used.~For~further~information\\
    see~the~documentation.
  }

\msg_new:nnn { xframed } { package-not-available }
  { 
    The~#1~package~is~not available~but~xframed~needs~the~package~.\\
    For~further~information~see~the~documenation.
  }

\msg_new:nnn { xframed } { unknown-option }
  { 
    The~option~file~'#1'~is~not~known~by~xframed.\\
    Perhaps~it~is~spelled~incorrectly.
  }

\msg_new:nnn { xframed } { unknown-style }
  { 
    The~style~'#1'~is~not~known~by~xframed:
    perhaps~it~is~spelled~incorrectly.
  }

\msg_new:nnn { xframed } { style-not-defined }
  {
    You~are~trying~to~expand~the~style~#1.\\
    The~style~is~undefined.~xframed~uses \\
    the~command~\newxframedstyle~instead.
  }

\msg_new:nnn { xframed } { style-already-defined }
  {
    You~are~trying~to~define~the~style~#1.\\
    The~style~is~alread~defined.~xframed~uses \\
    the~command~\addtoxframedstyle~instead.
  }


\msg_new:nnn { xframed } { prop-key-not-available }
  { 
    The~key~'#1'~is~not~defined~\\
    in~current~property~list~of~#2.\\                
    Perhaps~it~is~spelled~incorrectly.
  }


\msg_new:nnn { xframed } { patching-worked }
  { Patching~the~command~#1~was~successful.  }

\msg_new:nnn { xframed } { patching-failed }
  { Patching~the~command~#1~failed.  }
  

\msg_new:nnn { xframed } { output-option-failed }
  {
    You~are~trying~to~print~all~#1~options.\\
    These~options~are~not~defined~by~xframed. \\
    Allowed~are:~length,~skip~and~color.\\
    Perhaps~it~is~spelled~incorrectly.
  }
 
  
 \tex_endinput:D
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</package-msg>
%    \end{macrocode}
%
% %^^A=======================================================================
% %^^A NEW FILE
%    \begin{macrocode}
%<*package-split>
%    \end{macrocode}
%    
%    \begin{macrocode}
%<@@=xframed>
%    \end{macrocode}
%
%    \begin{macrocode}
%%=======================================================%%
%% file to define the algorithm to split xframed         %%
%%=======================================================%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                      Starting Output of the frame                      %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%do the output related to the previous tests
%%if splittable or split needed
%% \l__@@_allowbreaking_bool = true
%%if split need not or isn't needed
%% \l__@@_allowbreaking_bool = false
\cs_new:Nn \@@__output_and_draw:
 {
  \bool_if:NTF \l__@@_allowbreaking_bool
   {%need~split
    \@@__output_and_draw_aux:
   }     
   {%no~split
    \@@_draw_frame:
   }
 }


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                          Output of the frame                           %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% draw the frame and print the material
% all calculations are done at this point
\cs_new:Nn \@@_draw_frame:
 {
  \int_case:nnn { \@@__framemethode_int }
   {
    { 1 } { \@@__draw_tikz_frame: }%tikz
    { 2 } { \@@__draw_tikz_frame: }%default
    { 3 } { \@@__draw_tikz_frame: }%pstricks
   }
   {
    \@@__msg_log:n { xframed~undefined~style }%need a good warning
   }  
 }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                           Splitting allowed?                           %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%Test if xframed can be splitted
%% not possible if inside
%% minipage, parbox, float, boxes
\cs_new:Nn \@@__test_if_splittable:
 {
  \bool_if:nTF
    {
      \@@_if_p:N \if@minipage                  || %compatible to LaTeX2e
      \mode_if_inner_p:                             || %compatible to LaTeX2e
      \int_compare_p:nNn { \@floatpenalty } < { 0 } || %compatible to LaTeX2e
      \bool_if_p:N \l__@@_allowbreaking_bool 
    }
    {
     \bool_if:NF \l__@@_allowbreaking_bool 
       {
        \msg_warning:nn { xframed } { inside-box }
       }
     \@@__msg_log:n { xframed~uses~nonsplittable~output }
     %%can't be splitted
   %  \@@_use_nonsplittable_output:
     \bool_set_false:N \l__@@_allowbreaking_bool 
    }
    {
     \@@__msg_log:n { xframed~uses~splittable~output }
     %%can be splitted
    % \@@_use_splittable_output:
     \bool_set_true:N \l__@@_allowbreaking_bool 
    }
 }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                Setup the different parts of the frame                  %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%must be used local!!!
\cs_new:Npn \@@_setup_firstframe:
 {
  %bottom line required, otherwise bottomline 0pt.
  \bool_if:NF \l__@@_draweveryline_bool 
   {
    \bool_if:NT \l__@@_bottomline_bool
     {
      \@@__prop_set:Nnn \l__@@_length_option_prop 
           { line-width-bottom } { 0pt }
      \bool_set_false:N \l__@@_bottomline_bool      
     }
   }
  %no last-foot -- only foot
  \tl_set_eq:NN \l__@@_lastfoot_tl \l__@@_foot_tl
  % \cs_set_eq:NN \@@__last_foot: \@@__foot:
  %no inner-bottom-margin -- instead split-skip-bottom
  \@@__prop_set:Nnn \l__@@_length_option_prop 
       { inner-bottom-margin } { \@@__get_length:n { split-skip-bottom } }
  %no skip below
  \@@__prop_set:Nnn \l__@@_skip_option_prop 
       { skip-below } { 0 pt }
 }

%must be used local!!!
\cs_new:Npn \@@_setup_middleframe:
 {
  %top/bottom line required, otherwise top/bottom line 0pt.
  \bool_if:NF \l__@@_draweveryline_bool 
   {
    \bool_if:NT \l__@@_bottomline_bool
     {
      \@@__prop_set:Nnn \l__@@_length_option_prop 
           { line-width-bottom } { 0pt }
      \bool_set_false:N \l__@@_bottomline_bool      
     }
    \bool_if:NT \l__@@_topline_bool
     {
      \@@__prop_set:Nnn \l__@@_length_option_prop 
           { line-width-top } { 0pt }
      \bool_set_false:N \l__@@_topline_bool      
     }
   }
  %no extra skip above 
  \@@__prop_set:Nnn \l__@@_length_option_prop 
       { extra-skip-above } { 0 pt }   
  %no first-title -- only title
  \tl_set_eq:NN \l__@@_firsttitle_tl \l__@@_title_tl
  % \cs_set_eq:NN \@@__first_title: \@@__title:  
  %no last-foot -- only foot
  \tl_set_eq:NN \l__@@_lastfoot_tl \l__@@_foot_tl
  % \cs_set_eq:NN \@@__last_foot: \@@__foot:
  %no inner-top-margin -- instead split-skip-top
  \@@__prop_set:Nnn \l__@@_length_option_prop 
       { inner-top-margin } { \@@__get_length:n { split-skip-top } }
  %no inner-bottom-margin -- instead split-skip-bottom
  \@@__prop_set:Nnn \l__@@_length_option_prop 
       { inner-bottom-margin } { \@@__get_length:n { split-skip-bottom } }
  %no skip below
  \@@__prop_set:Nnn \l__@@_skip_option_prop 
       { skip-below } { 0 pt }
 }

%must be used local!!!
\cs_new:Npn \@@_setup_lastframe:
 {
  %top line required, otherwise top line 0pt.
  \bool_if:NF \l__@@_draweveryline_bool 
   {
    \bool_if:NT \l__@@_topline_bool
     {
      \@@__prop_set:Nnn \l__@@_length_option_prop 
           { line-width-top } { 0pt }
      \bool_set_false:N \l__@@_topline_bool      
     }
   }
  %no extra skip above 
  \@@__prop_set:Nnn \l__@@_length_option_prop 
       { extra-skip-above } { 0 pt }
  %no first-title -- only title
  \tl_set_eq:NN \l__@@_firsttitle_tl \l__@@_title_tl 
  % \cs_set_eq:NN \@@__first_title: \@@__title:   
  %no inner-top-margin -- instead split-skip-top
  \@@__prop_set:Nnn \l__@@_length_option_prop 
       { inner-top-margin } { \@@__get_length:n { split-skip-top } }
 }


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                    Test if split is in title of foot                   %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\cs_set_eq:NN \@@__setup_frame: \q_stop

\cs_new:Npn \@@__dimtest_title_foot:
 {
  \dim_compare:nNnTF 
    { \vsize }
    <
    {
     \l__@@_title_htdp_dim + \l__@@_foot_htdp_dim      
     +
     \@@__get_length:n { line-width-title }
     +
     \@@__get_length:n { line-width-foot }
    }
    {%title+foot too big for one page -- error
     \@@__msg_log:n { xframed~foot~title~too~big }%need a good warning     
    }
    {%we can work:
     \dim_compare:nNnTF 
       { \l__@@_free_vspace_dim }
       <
       {
        \l__@@_firsttitle_htdp_dim + \l__@@_foot_htdp_dim      
        +
        \@@__get_length:n { line-width-title }
        +
        \@@__get_length:n { line-width-foot }
        +
        \@@__get_length:n { minimum-space }
       }
       {%title+foot too big for current page
        \xframmed__pagebreak:
        \@@__coffin_output_aux:
        \@@__msg_log:n { xframed~foot~title~not~too~big~with~minimum-space}   
       }
       {
        \@@__msg_log:n { xframed~foot~title~not~too~big }   
       }
    }
 }
 
 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%               Starting splitting algorithm -- first part               %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cs_new:Npn \xframmed__pagebreak:
 {
  \vfill\eject
  \dim_set_eq:NN \l__@@_free_vspace_dim \vsize
%  \@@__output_and_draw_aux_i:
 }


\cs_new:Npn \@@__output_and_draw_aux:
 {
  \group_begin:
    \tl_set_eq:NN \l__@@_temptitle_tl \l__@@_firsttitle_tl
    \tl_set_eq:NN \l__@@_tempfoot_tl  \l__@@_foot_tl
    \@@__title:
    \@@__foot:
    \@@__dimtest_title_foot:
    %calculate the maximum height of first frame:
    \dim_set:Nn \l__@@_splitheight_dim { \l__@@_free_vspace_dim }
    \clist_map_inline:nn
      {
       extra-skip-above  , line-width-top   , inner-top-margin ,
       split-skip-bottom , line-width-title , line-width-foot  ,
       title-height      , foot-height
      }
      {
       \@@__length_sub:Nn \l__@@_splitheight_dim  { ##1 }
      }
    \@@__maximum_skip:Nn \l_tmpa_dim  
     { \@@__get_skip:n { skip-above } }
    \dim_sub:Nn  \l__@@_splitheight_dim { \l_tmpa_dim }
    \bool_if:NT \l__@@_draweveryline_bool 
     {
      \bool_if:NT \l__@@_bottomline_bool
       {
        \@@__length_sub:Nn 
           \l__@@_splitheight_dim { line-width-bottom }
       }
     }     
    \@@__msg_log:n 
      { 
       Maximum~height~of~first~frame:\\ 
       \dim_eval:n { \l__@@_splitheight_dim }\ =\
       \@@__convert:n{ \l__@@_splitheight_dim } 
      }
    \dim_compare:nNnTF 
      { \l__@@_splitheight_dim } 
      < 
      { \@@__get_length:n { minimum-space } } 
      { \xframmed__pagebreak: \@@__output_and_draw_aux: }
      {
       \@@_splitting_algorithm:
       \group_begin:  
         \@@_setup_firstframe:
         \coffin_set_eq:NN \l__@@_main_coffin \l__@@_temp_coffin
         \vcoffin_set:Nnn \l__@@_main_coffin
            { \l__@@_coffin_width_dim }
            {
             \@@__offinterlineskip:
             \skip_vertical:n { \@@__get_length:n { inner-top-margin } }
             \vbox_unpack_clear:N \l__@@_main_coffin
             \skip_vertical:n { \@@__get_length:n { inner-bottom-margin } }
            }
         \@@_draw_frame:
       \group_end:
       \xframmed__pagebreak:
       \@@__output_and_draw_aux_i:  
      }
  \group_end:
 }
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%              Starting splitting algorithm -- middle part               %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\cs_new:Npn \@@__output_and_draw_aux_i:  
 {
  \dim_compare:nNnTF { \box_wd:N \l__@@_main_coffin } < { 1pt }
  %\box_if_empty:NTF \l__@@_main_coffin
   {
     %WARNING
   }
   {
    \tl_set_eq:NN \l__@@_temptitle_tl \l__@@_title_tl
    \tl_set_eq:NN \l__@@_tempfoot_tl  \l__@@_lastfoot_tl
    \@@__title:
    \@@__foot:
    %calculate the maximum height of current / maybe last frame:
    \dim_set:Nn \l__@@_splitheight_dim { \l__@@_free_vspace_dim }
    \clist_map_inline:nn
      {
       split-skip-top , inner-bottom-margin ,
       line-width-title , line-width-foot , line-width-bottom
      }
      {
       \@@__length_sub:Nn \l__@@_splitheight_dim { ##1 }
      }
    \bool_if:NT \l__@@_draweveryline_bool 
     {
      \bool_if:NT \l__@@_topline_bool
       {
        \@@__length_sub:Nn \l__@@_splitheight_dim { line-width-top }
       }
     }
    \dim_compare:nNnTF 
     { \box_ht:N \l__@@_main_coffin + \box_dp:N \l__@@_main_coffin }
     < 
     { \l__@@_splitheight_dim }
     {%last frame
       \group_begin:  
         \@@_setup_lastframe:
         \vcoffin_set:Nnn \l__@@_main_coffin
            { \l__@@_coffin_width_dim }
            {
             \@@__offinterlineskip:
             \skip_vertical:n { \@@__get_length:n { split-skip-top } }
             \vbox_unpack_clear:N \l__@@_main_coffin
             \skip_vertical:n { \@@__get_length:n { inner-bottom-margin } }
            }
         \@@_draw_frame:
       \group_end:
     }
     {%we have a middle part
      \tl_set_eq:NN \l__@@_temptitle_tl \l__@@_title_tl
      \tl_set_eq:NN \l__@@_tempfoot_tl  \l__@@_foot_tl
      \@@__title:
      \@@__foot:
      \dim_set:Nn \l__@@_splitheight_dim { \l__@@_free_vspace_dim }
      \clist_map_inline:nn
        {
         split-skip-top , split-skip-bottom, line-width-title ,
         line-width-foot , title-height , foot-height
        }
        {
         \@@__length_sub:Nn \l__@@_splitheight_dim { ##1 }
        }
      \bool_if:NT \l__@@_draweveryline_bool 
       {
        \bool_if:NT \l__@@_topline_bool
         {
          \@@__length_sub:Nn 
             \l__@@_splitheight_dim { line-width-top }
         }
        \bool_if:NT \l__@@_bottomline_bool
         {
          \@@__length_sub:Nn 
              \l__@@_splitheight_dim { line-width-bottom }
         }
       }
      \@@__msg_log:n 
        { 
         Maximum~height~of~middle~frame:\\ 
         \dim_eval:n { \l__@@_splitheight_dim }\ =\
         \@@__convert:n{ \l__@@_splitheight_dim } 
        }
      \@@_splitting_algorithm:
      \group_begin:  
        \@@_setup_middleframe:
        \coffin_set_eq:NN \l__@@_main_coffin \l__@@_temp_coffin
        \vcoffin_set:Nnn \l__@@_main_coffin
           { \l__@@_coffin_width_dim }
           {
            \@@__offinterlineskip:
            \skip_vertical:n { \@@__get_length:n { split-skip-top } }
            \vbox_unpack_clear:N \l__@@_main_coffin
            \skip_vertical:n { \@@__get_length:n { split-skip-bottom } }
           }
        \@@_draw_frame:
      \group_end:
      \xframmed__pagebreak:
      \@@__output_and_draw_aux_i:             
     }    
   }
 }

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                          Splitting with loop                           %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cs_new:Npn \@@_splitting_algorithm:
 {
  \@@__local_boxdim:
  \@@__ignore_vbadness:
  \vbox_set_split_to_ht:NNn 
      \l__@@_tmpb_box
      \l__@@_main_coffin
    { \l__@@_splitheight_dim - \tex_pageshrink:D }
  \vbox_set:Nn \l__@@_tmpb_box 
        { \vbox_unpack_clear:N \l__@@_tmpb_box }
  \dim_set:Nn \l__@@_tmpa_dim      
    {
     \box_ht:N \l__@@_tmpb_box + \box_dp:N \l__@@_tmpb_box
    }
  \dim_compare:nNnTF { \l__@@_splitheight_dim } > { \l__@@_tmpa_dim  }
   {%splitting successful
    \@@__msg_log:n { Splitting~successful }
   }
   {
    \@@__msg_log:n { Splitting~not~successful }
    \int_set:Nn \l_tmpa_int { 0 }
    \dim_set:Nn \l_tmpa_dim { 0pt }
    \dim_while_do:nNnn { \l__@@_tmpa_dim } < { \l__@@_splitheight_dim }
     {
      \coffin_set_eq:NN \l__@@_main_coffin \l__@@_save_coffin
      \int_incr:N \l_tmpa_int
      \dim_add:Nn \l_tmpa_dim { 8 pt } 
      \@@__ignore_vbadness:
      \vbox_set_split_to_ht:NNn 
          \l__@@_tmpb_box
          \l__@@_main_coffin
        { \l__@@_splitheight_dim - \tex_pageshrink:D - \l_tmpa_dim }
      \vbox_set:Nn \l__@@_tmpb_box 
            { \vbox_unpack_clear:N \l__@@_tmpb_box }
      \dim_set:Nn \l__@@_tmpa_dim      
        {
         \box_ht:N \l__@@_tmpb_box + \box_dp:N \l__@@_tmpb_box
        }
      \@@__msg_log:n { Splitting~Try~\int_use:N \l_tmpa_int }    
      \int_compare:nNnT { \l_tmpa_int } > { 50 }
        {
         \@@__msg_log:n { too~much~loops }
         \dim_set:Nn \l__@@_tmpa_dim  { 0pt }
        }
     }
   }
   \vcoffin_set:Nnn
            \l__@@_temp_coffin
          { \l__@@_coffin_width_dim }
          { \vbox_unpack_clear:N \l__@@_tmpb_box }
   \@@__coffin_restructure:N \l__@@_temp_coffin
   \@@__coffin_restructure:N \l__@@_main_coffin
   \@@__msg_log:n 
     { 
      height~of~split~frame:\\ 
      \dim_eval:n { \l__@@_tmpa_dim }\ =\
       \@@__convert:n{ \l__@@_tmpa_dim }
     }     
 }


 \tex_endinput:D
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</package-split>
%    \end{macrocode}
%
% %^^A=======================================================================
% %^^A NEW FILE
%    \begin{macrocode}
%<*package-theorem>
%    \end{macrocode}
%    
%    \begin{macrocode}
%<@@=xframed>
%    \end{macrocode}
%
%    \begin{macrocode}
%%=======================================================%%
%% file to supports theorems                             %%
%%=======================================================%%
 \tex_endinput:D
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</package-theorem>
%    \end{macrocode}
%
% %^^A=======================================================================
% %^^A NEW FILE
%    \begin{macrocode}
%<*package-tikz>
%    \end{macrocode}
%    
%    \begin{macrocode}
%<@@=xframed>
%    \end{macrocode}
%
%    \begin{macrocode}
%%=======================================================%%
%% file to define all tikz functions to draw the frame   %%
%%=======================================================%%



%%initial~of~styles
%\def\xframedsetuptikz{\pgfqkeys{/tikz/xframed}}
\pgfqkeys{/tikz/xframed}{
%main
 bg/.style=
      { 
       fill = { \@@__get_color:n { bg-color } },
       rounded~corners= { 0pt }
      },
%title
 title~bg/.style=
      {
       draw=none, 
       fill= \@@__get_color:n { title-bg-color },
       rounded~corners= { 0pt } 
      }, 
 title~rule/.style=
      { 
       draw= \@@__get_color:n { title-line-color },
       line~width= \@@__get_length:n { line-width-title },
      },
%foot
 foot~bg/.style=
      { 
       fill= \@@__get_color:n { foot-bg-color },
       rounded~corners= { 0pt } 
      }, 
 foot~rule/.style=
      { 
       draw = \@@__get_color:n { foot-line-color },
       line~width=\@@__get_length:n { line-width-foot }
      },
%%%%%%%title
%%%%%% left~line/.style={line~width=2pt},
%%%%%%%arc
 inner~arc/.style={rounded~corners=\@@__get_length:n { arc-inner }},
 outer~arc/.style={rounded~corners=\@@__get_length:n { arc-outer }},
%frame
 right~line/.style=
       { 
        draw = \@@__get_color:n { line-color-right } ,
        line~width= { \@@__get_length:n { line-width-right } },
       },
 left~line/.style=
      { 
       draw = \@@__get_color:n { line-color-left } ,
       line~width={ \@@__get_length:n { line-width-left } },
      },
 top~line/.style=
     {
      draw = \@@__get_color:n { line-color-top } ,
      line~width={ \@@__get_length:n { line-width-top } },
     },
 bottom~line/.style=
     {
      draw = \@@__get_color:n { line-color-bottom } ,
      line~width={ \@@__get_length:n { line-width-bottom } },
     },
%subtitle
% subtitle~bg/.style={fill=red},
% subtitle~above~rule/.style={draw=black,line~width=2pt},
% subtitle~below~rule/.style={draw=black,line~width=2pt},
% subtitle~rule/.style={subtitle~above~rule=#1,subtitle~below~rule=#1},
%clear definition 
}


\cs_new:Nn \@@__draw_tikz_frame:
 {
  \begin{tikzpicture}[remember~picture]    
   %%Inner part -- defines node xframed-inner
   \@@__tikz_innerpart:
   %%title part -- defines node xframed-title
   \@@__tikz_titlepart:
   %%foot part -- defines node xframed-foot  
   \@@__tikz_footpart:
   %%%%%%%%%
   %Outer part -- defines node xframed-outer
   \@@__tikz_drawframe:    
  %\pgfnodealias{xframed-outer}{xframed-inner}
   %use the correct bounding box
   \pgfresetboundingbox\useasboundingbox%
     ($(xframed-outer.south~west)+(-\@@__get_length:n { margin-left },0)$) 
       rectangle
     ($(xframed-outer.north~east)+( \@@__get_length:n { margin-right },0)
       +(0,\@@__get_length:n { extra-skip-above })$) ;
      %Show development tools
   %%User hook
   \tl_use:N \l__@@_posttikz_tl   
   \tl_use:N \l__@@_singletikz_tl
   %%xframed-developer info      
   \@@__nodepoints_development:
  \end{tikzpicture} 
%%%%  \@@__all_option_output:
 }
 
\cs_new:Nn \@@__tikz_innerpart:
 {
  \begin{scope}
    \tikzset{every~node/.style={inner~sep=0pt,outer~sep=0pt,}}      
    \node[](xframed-inner)
      {
       \hbox:n{} 
       \skip_horizontal:n 
        { 
         \@@__get_length:n { inner-margin-left } 
        }
       \@@__display_coffins:N \l__@@_main_coffin 
       \skip_horizontal:n 
        { 
         \@@__get_length:n { inner-margin-right } 
        }
       \hbox:n{} 
      };        
  \end{scope}
 }
 
\cs_new:Nn \@@__tikz_titlepart:
 {
  \tl_if_blank:VTF \l__@@_firsttitle_tl
    {
     \pgfnodealias{xframed-title}{xframed-inner} 
    } 
    {
    \begin{scope}
      \tikzset{every~node/.style={inner~sep=0pt,outer~sep=0pt,}}
      \node[anchor=south, yshift= \@@__get_length:n { line-width-title } ]
        (xframed-title) at (xframed-inner.north)
        {
         \hbox:n{} 
         \skip_horizontal:n { \@@__get_length:n { inner-margin-left } }
         \@@__display_coffins:N \l__@@_title_coffin 
         \skip_horizontal:n { \@@__get_length:n { inner-margin-right } }
         \hbox:n{} 
        };
    \end{scope}
    } 
 } 
\cs_new:Nn \@@__tikz_footpart:
 {
  \tl_if_blank:VTF \l__@@_lastfoot_tl
    {
     \pgfnodealias{xframed-foot}{xframed-inner}
    }
    {
     \begin{scope}
       \tikzset{every~node/.style={inner~sep=0pt,outer~sep=0pt,}}     
       \node[anchor=north,
        yshift= {-\@@__get_length:n { line-width-foot }}, 
        ] (xframed-foot) at (xframed-inner.south)
         {
          \skip_horizontal:n { \@@__get_length:n { inner-margin-left } }
          \@@__display_coffins:N \l__@@_foot_coffin
          \skip_horizontal:n { \@@__get_length:n { inner-margin-right } }
          \hbox:n{} 
         };
     \end{scope}
    } 
 } 

\cs_new:Nn \@@__tikz_drawframe:
 {
  \begin{scope}[on~background~layer]
    %%Draw the main frame
    \coordinate (fxx) at %fxx=left bottom
             ($(xframed-foot.south~west)
               +(-\@@__get_length:n { line-width-left },
                 -\@@__get_length:n { line-width-bottom }
                )
              $); 
    \coordinate (fyy) at %fyy=right top
             ($(xframed-title.north~east)
               +(\@@__get_length:n { line-width-right },
                 \@@__get_length:n { line-width-top }
                )
              $);
    \tikzset{every~node/.style={inner~sep=0pt,outer~sep=0pt,}}      
    \node[anchor=south,
           yshift= -\@@__get_length:n { line-width-bottom },
           xshift= .5*\@@__get_length:n { line-width-right }
                   -.5*\@@__get_length:n { line-width-left }, ] 
         (xframed-outer) at (xframed-foot.south)
         {\tikz\path(fxx) rectangle (fyy);};
    \clip[xframed/outer~arc](xframed-outer.south~west) rectangle
                            (xframed-outer.north~east);
    \@@__tikz_drawframe_lines:
    \@@__tikz_drawframe_titlefoot:
  \end{scope}
 }
\cs_new:Nn \@@__tikz_drawframe_lines:
 {
  %left line
    \path[fill = \@@__get_color:n { line-color-left }] 
     (xframed-outer.north~west) --  (xframed-outer.south~west) 
      -- (xframed-inner.center) --cycle;
   %right line
    \path[fill = \@@__get_color:n { line-color-right }] 
     (xframed-outer.north~east) --  (xframed-outer.south~east) 
      -- (xframed-inner.center) --cycle;
  %top line
    \path[fill = \@@__get_color:n { line-color-top }] 
     (xframed-outer.north~east) --  (xframed-outer.north~west) 
      -- (xframed-inner.center) --cycle;
   %bottom line
    \path[fill = \@@__get_color:n { line-color-bottom }] 
     (xframed-outer.south~east) --  (xframed-outer.south~west)
      -- (xframed-inner.center) --cycle;   
 } 

\cs_new:Nn \@@__tikz_drawframe_titlefoot:
 {
  \begin{scope}
   %inner frame
     \clip[xframed/inner~arc] (xframed-foot.south~west) rectangle 
                              (xframed-title.north~east);
     \path[xframed/bg] (xframed-foot.south~west) rectangle 
                       (xframed-title.north~east);
   %draw title componente (1) title (2) foot rule:
     \tl_if_blank:VF \l__@@_firsttitle_tl
       {
        \path[xframed/title~bg] (xframed-title.south~west) rectangle  
                                (xframed-title.north~east);
        \bool_if:NT \l__@@_footline_bool
         {
          \path[xframed/title~rule]    
                 ([yshift= .5*\@@__get_length:n { line-width-foot }]  
                  xframed-inner.north~west) -- 
                 ([yshift= .5*\@@__get_length:n { line-width-foot }]
                  xframed-inner.north~east);  
         }
       }
   %draw foot componente (1) foot (2) foot rule:
     \tl_if_blank:VF \l__@@_lastfoot_tl
       {
        \path[xframed/foot~bg] (xframed-foot.south~west) rectangle  
                               (xframed-foot.north~east);
        \bool_if:NT \l__@@_footline_bool
         {
          \path[xframed/foot~rule]    
                 ([yshift= -.5*\@@__get_length:n { line-width-foot }]
                  xframed-inner.south~west) -- 
                 ([yshift= -.5*\@@__get_length:n { line-width-foot }]
                  xframed-inner.south~east);  
         }
       }
  \end{scope}    
 }


%%%%%%%%%%
%DEVELOPER INFO
%%%%%%%%%%
\cs_new:Nn \@@__nodepoints_development:
 {
  \bool_if:NT \l__@@_developer_info_bool
   {
    \begin{scope}
     %%%%%Inner nodes
     \@@__nodepoints_inner_development:
     %%%%%title nodes
     \@@__nodepoints_title_development:
     %%%%%foot nodes
     \@@__nodepoints_foot_development:
     %%%%%Outer nodes  
     \@@__nodepoints_outer_development:
     %%%%%length     
     \@@__outerlength_development:
    \end{scope}
   }
 }
 
 \cs_new:Nn \@@__nodepoints_inner_development:
  {
   \fill[red!70!black] (xframed-inner.north~west) circle (2pt) 
      node[above=0.5cm,font=\footnotesize\ttfamily] {xframed-inner.north~west}; 
   \fill[red!70!black] (xframed-inner.north~east) circle (2pt) 
      node[above=0.5cm,font=\footnotesize\ttfamily] {xframed-inner.north~east}; 
   \fill[red!70!black] (xframed-inner.south~west) circle (2pt) 
      node[below=0.5cm,font=\footnotesize\ttfamily] {xframed-inner.south~west}; 
   \fill[red!70!black] (xframed-inner.south~east) circle (2pt) 
      node[below=0.5cm,font=\footnotesize\ttfamily] {xframed-inner.south~east};
   \fill[red!70!black] (xframed-inner.center) circle (2pt) 
      node[draw,rectangle,fill=yellow,above=0.5cm,font=\footnotesize\ttfamily] 
      {xframed-inner.center};
  }

 \cs_new:Nn \@@__nodepoints_outer_development:
  {
   \fill[blue!70!black] (xframed-outer.north~west) circle (2pt) 
      node[above=0.75cm,font=\footnotesize\ttfamily] 
      {xframed-outer.north~west}; 
   \fill[blue!70!black] (xframed-outer.north~east) circle (2pt) 
      node[above=0.75cm,font=\footnotesize\ttfamily] 
      {xframed-outer.north~east}; 
   \fill[blue!70!black] (xframed-outer.south~west) circle (2pt) 
      node[below=0.75cm,font=\footnotesize\ttfamily] 
      {xframed-outer.south~west}; 
   \fill[blue!70!black] (xframed-outer.south~east) circle (2pt) 
      node[below=0.75cm,font=\footnotesize\ttfamily] {xframed-outer.south~east};
   \fill[blue!70!black] (xframed-outer.center) circle (2pt) 
      node[draw,rectangle,fill=yellow,below=0.5cm,font=\footnotesize\ttfamily] 
      {xframed-outer.center};
  }

 \cs_new:Nn \@@__nodepoints_title_development:
  {
   \tl_if_blank:VF \l__@@_firsttitle_tl
     {
      \fill[green!70!black] (xframed-title.north~west) circle (2pt) 
       node[above=0.5cm,font=\footnotesize\ttfamily] 
       {xframed-title.north~west}; 
      \fill[green!70!black] (xframed-title.north~east) circle (2pt) 
       node[above=0.5cm,font=\footnotesize\ttfamily] 
       {xframed-title.north~east}; 
      \fill[green!70!black] (xframed-title.south~west) circle (2pt) 
       node[below=0.5cm,font=\footnotesize\ttfamily] 
       {xframed-title.south~west}; 
      \fill[green!70!black] (xframed-title.south~east) circle (2pt) 
       node[below=0.5cm,font=\footnotesize\ttfamily] 
       {xframed-title.south~east};
      \fill[green!70!black] (xframed-title.center) circle (2pt) 
       node[draw,rectangle,fill=yellow,above=0.5cm,font=\footnotesize\ttfamily] 
       {xframed-title.center};
     }
  }

 \cs_new:Nn \@@__nodepoints_foot_development:
  {
   \tl_if_blank:VF \l__@@_lastfoot_tl
    {
     \fill[green!70!black] (xframed-foot.north~west) circle (2pt) 
       node[above=0.5cm,font=\footnotesize\ttfamily] 
       {xframed-foot.north~west}; 
     \fill[green!70!black] (xframed-foot.north~east) circle (2pt) 
       node[above=0.5cm,font=\footnotesize\ttfamily] 
       {xframed-foot.north~east}; 
     \fill[green!70!black] (xframed-foot.south~west) circle (2pt) 
       node[below=0.5cm,font=\footnotesize\ttfamily] 
       {xframed-foot.south~west}; 
     \fill[green!70!black] (xframed-foot.south~east) circle (2pt) 
       node[below=0.5cm,font=\footnotesize\ttfamily] 
       {xframed-foot.south~east};
     \fill[green!70!black] (xframed-foot.center) circle (2pt) 
       node[draw,rectangle,fill=yellow,above=0.5cm,font=\footnotesize\ttfamily] 
       {xframed-foot.center};
    } 
  }
 
\cs_new:Nn \@@__outerlength_development:
 {
  \draw[latex-latex] (xframed-outer.east)  --++ 
                     ( \@@__get_length:n { margin-right },0) ;
  \draw[latex-latex] (xframed-outer.west)  --++ 
                     (-\@@__get_length:n { margin-left }, 0) ;
  \dim_set:Nn \l_tmpa_dim { \@@__get_skip:n { skip-above } }
  \draw[latex-latex] (xframed-outer.north) --++ ( 0 , \l_tmpa_dim ) ;
  \dim_set:Nn \l_tmpa_dim { \@@__get_skip:n { skip-below } }
  \draw[latex-latex] (xframed-outer.south)  --++ ( 0 , -\l_tmpa_dim ) ;
 }

 
 \tex_endinput:D
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</package-tikz>
%    \end{macrocode}
%
% %^^A=======================================================================
% %^^A NEW FILE
%    \begin{macrocode}
%<*package-titlefoot>
%    \end{macrocode}
%    
%    \begin{macrocode}
%<@@=xframed>
%    \end{macrocode}
%
%    \begin{macrocode}
%%=======================================================%%
%% file to define all functions to use title or foot     %%
%%=======================================================%%


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                          Declaration of title                          %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\@@__prop_set:Nnn \l__@@_length_option_prop  
   { title-height } { \c_zero_dim }
\@@__prop_set:Nnn \l__@@_length_option_prop  
   { foot-height } { \c_zero_dim }


\cs_new:Nn \@@__title:
 {
    \tl_if_blank:VTF \l__@@_temptitle_tl
     {
      \coffin_set_eq:NN \l__@@_title_coffin \c_empty_coffin
      \dim_set:Nn \l__@@_title_htdp_dim { 0pt }
      \@@__prop_set:Nnn \l__@@_length_option_prop
       { line-width-title } { 0pt }
      \bool_set_false:N \l__@@_titleline_bool 
      \@@__prop_set:Nnn \l__@@_length_option_prop  
            { title-height } { 0pt }
     } 
     {
      %ssave the contents of title in coffin
      \vcoffin_set:Nnn
          \l__@@_title_coffin
        { \l__@@_coffin_width_dim   }
        {
         \tl_use:N \l__@@_titleprecode_tl
         \tl_use:N \l__@@_title_font_tl
         \color { \@@__get_color:n { title-font-color } }
         \tl_use:N \l__@@_temptitle_tl
         \@@__ignore_last_descenders:
         \@@__ignore_last_skip:
         \tl_use:N \l__@@_titlepostcode_tl 
        }
      \@@__coffin_restructure:N  \l__@@_title_coffin  
      %add the needed vertical space to coffin    
      \vcoffin_set:Nnn   
          \l__@@_title_coffin
        { \l__@@_coffin_width_dim }
        {
         \@@__offinterlineskip:
         \skip_vertical:n { \@@__get_length:n { title-skip-above } }
         \vbox_unpack_clear:N \l__@@_title_coffin
         \skip_vertical:n {  \@@__get_length:n { title-skip-below } }
        }     
      \dim_set:Nn \l__@@_title_htdp_dim
         { 
           \coffin_ht:N \l__@@_title_coffin + 
           \coffin_dp:N \l__@@_title_coffin 
         }
      \@@__prop_set:Nnn \l__@@_length_option_prop  
            { title-height } { \dim_use:N \l__@@_title_htdp_dim }   
      \bool_if:NF \l__@@_titleline_bool 
       {
        \@@__prop_set:Nnn \l__@@_length_option_prop
            { line-width-title } { 0pt }
       }               
    }    
 } 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                           Declaration of foot                          %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\cs_new:Nn \@@__foot:
 {
    \tl_if_blank:VTF \l__@@_tempfoot_tl
     {
      \coffin_set_eq:NN \l__@@_foot_coffin \c_empty_coffin
      \dim_set:Nn \l__@@_foot_htdp_dim { 0pt }
      \@@__prop_set:Nnn \l__@@_length_option_prop
       { line-width-foot } { 0pt }
      \bool_set_false:N \l__@@_footline_bool  
     } 
     {
      \vcoffin_set:Nnn
          \l__@@_foot_coffin
        { \l__@@_coffin_width_dim   }
        {
         \color { \@@__get_color:n { foot-font-color } }
         \tl_use:N \l__@@_footprecode_tl
         \tl_use:N \l__@@_foot_font_tl
         \tl_use:N \l__@@_tempfoot_tl
         \@@__ignore_last_descenders:
         \@@__ignore_last_skip:
         \tl_use:N \l__@@_footpostcode_tl 
        }
      \vcoffin_set:Nnn   
          \l__@@_foot_coffin
        { \l__@@_coffin_width_dim }
        {
         \@@__offinterlineskip:
         \skip_vertical:n {  \@@__get_length:n { foot-skip-above } }
         \vbox_unpack_clear:N \l__@@_foot_coffin
         \skip_vertical:n {  \@@__get_length:n { foot-skip-below } }
        }
      \dim_set:Nn \l__@@_foot_htdp_dim
         { 
           \coffin_ht:N \l__@@_foot_coffin + 
           \coffin_dp:N \l__@@_foot_coffin 
         }
      \@@__prop_set:Nnn \l__@@_length_option_prop  
            { foot-height } { \dim_use:N \l__@@_foot_htdp_dim }
      \bool_if:NF \l__@@_footline_bool 
       {
        \@@__prop_set:Nnn \l__@@_length_option_prop
            { line-width-foot } { 0pt }
       }         
    }
 }


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%========================================================================%%%%
%%%%                                   END                                  %%%%
%%%%========================================================================%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 \tex_endinput:D
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</package-titlefoot>
%    \end{macrocode}
%
% %^^A=======================================================================
% %^^A NEW FILE
%    \begin{macrocode}
%<*package-todo>
%    \end{macrocode}
%    
%    \begin{macrocode}
%<@@=xframed>
%    \end{macrocode}
%
%    \begin{macrocode}
%%=======================================================%%
%% file for developming -- only a small list of todos    %%
%%=======================================================%%

%    \end{macrocode}
%
%
%    \begin{macrocode}
%</package-todo>
%    \end{macrocode}
%
% %^^A=======================================================================
% %^^A NEW FILE
%    \begin{macrocode}
%<*package-user>
%    \end{macrocode}
%    
%    \begin{macrocode}
%<@@=xframed>
%    \end{macrocode}
%
%    \begin{macrocode}
%%=======================================================%%
%% file to define frontends for users                    %%
%%=======================================================%%


%%Defining new document environment based on xframed
%%syntax \Newxframedenv[option list]{env name}
\NewDocumentCommand \Newxframedenv { O{} m }
 {
  \NewDocumentEnvironment { #2 }{ }
   { 
     \xframedsetup{#1}
     \begin{xframed}
   }
   { 
    \end{xframed} 
   }
 }
%%Redefining document environment based on xframed
%%syntax \Renewxframedenv[option list]{env name}
\NewDocumentCommand \Renewxframedenv { O{} m }
 {
  \RenewDocumentEnvironment { #2 }{ O{} }
   { 
    \xframedsetup{#1}
    \begin{xframed}
   }
   { 
    \end{xframed} 
   }
 }

%%Defining method to save styles
\NewDocumentCommand \newxframedstyle { m m }
 {
  \tl_if_exist:cTF { @@__style_#1_user_tl }
   {
    \msg_warning:nnx { xframed } { style-already-defined } { #1 }
    \addtoxframedstyle { #1 } { #2 }
   }
   {
    \tl_new:c  { @@__style_#1_user_tl } 
    \tl_set:cn { @@__style_#1_user_tl } { #2 }
   }
 }


\NewDocumentCommand \renewxframedstyle { m m }
 {
  \tl_if_exist:cTF { @@__style_#1_user_tl }
   {
    \tl_set:cn { @@__style_#1_user_tl } { #2 }
   }
   {
    \msg_warning:nnx { xframed } { style-not-defined } { #1 }
    \newxframedstyle { #1 } { #2 }
   }
 }

 
\NewDocumentCommand \addtoxframedstyle { m m }
 {
  \tl_if_exist:cTF { @@__style_#1_user_tl }
   {\tl_put_right:cn { @@__style_#1_user_tl } { #2 } }
   {
    \msg_warning:nnx { xframed } { style-not-defined } { #1 }
    \newxframedstyle { #1 } { #2 }
   }
 }

 
%%display the frame method
\NewDocumentCommand \xframedmethod {  }
 {
  \tl_use:N \@@__framemethode_tl
 }
 
 
%%Allows the usage of length defined by key=value
%%\usexframendlength{key}
%%http://tex.stackexchange.com/a/112345/5239
\NewDocumentCommand \usexframendlength { m }
 {
%  \@@__get_length:n { #1 }
  \tl_if_empty:fTF   % return value is empty but only if we do "f" expansion
   {  \prop_get:Nn \l__@@_length_option_prop { #1 }  }
   { 
    0pt 
    \msg_warning:nnnn
     { xframed } 
     { prop-key-not-available }
     { #1 }
     { length }
   }
   {  
    \prop_get:Nn \l__@@_length_option_prop { #1 } 
   }  
 }
%%\showxframendlength{key}
%%http://tex.stackexchange.com/a/112345/5239
\NewDocumentCommand \showxframendlength { m }
 {
  %needed if value was length
%  \dim_set:Nn \l_tmpa_dim { \@@__get_length:n { #1 } } 
%  \dim_use:N  \l_tmpa_dim
  \tl_if_empty:fTF   % return value is empty but only if we do "f" expansion
   {  \prop_get:Nn \l__@@_length_option_prop { #1 }  }
   {  
    \msg_warning:nnnn
     { xframed } 
     { prop-key-not-available }
     { #1 }
     { length }
    \textcolor{red}{??}
   }
   {  
    \dim_set:Nn \l_tmpa_dim { \@@__get_length:n { #1 } } 
    \dim_use:N  \l_tmpa_dim
   }  
 }






%%Allows the usage of skips defined by key=value
%%\usexframendskips{key}
%%http://tex.stackexchange.com/a/112345/5239
\NewDocumentCommand \usexframendskip { m }
 {
%  \@@__get_skips:n { #1 }
  \tl_if_empty:fTF   % return value is empty but only if we do "f" expansion
   {  \prop_get:Nn \l__@@_skip_option_prop { #1 }  }
   { 
    0pt 
    \msg_warning:nnnn
     { xframed } 
     { prop-key-not-available }
     { #1 }
     { skip }
   }
   {  
    \prop_get:Nn \l__@@_skip_option_prop { #1 } 
   }  
 }
%%\showxframendskip{key}
\NewDocumentCommand \showxframendskip { m }
 {
  %needed if value was a skip
%  \skip_set:Nn \l_tmpa_skip { \@@__get_skip:n { #1 } }
%  \skip_use:N   \l_tmpa_skip
  \tl_if_empty:fTF   % return value is empty but only if we do "f" expansion
   {  \prop_get:Nn \l__@@_skip_option_prop { #1 }  }
   {  
    \msg_warning:nnnn
     { xframed } 
     { prop-key-not-available }
     { #1 }
     { skip }
    \textcolor{red}{??}
   }
   {  
    \skip_set:Nn \l_tmpa_skip { \@@__get_skip:n { #1 } } 
    \skip_use:N  \l_tmpa_skip
   }   
 }
 

%%Prints all options 
%% \xframedprintalloption[<option property>]
\NewDocumentCommand \xframedprintalloption { o }
 {
  \IfNoValueTF { #1 }
   {
    \@@__all_option_output:
   }
   {
    \clist_map_inline:nn { #1 }
     {
      \cs_if_exist_use:cF { @@__##1_output_aux: }
       { \msg_error:nnn { xframed} { output-option-failed } { ##1 } }
     }
   } 
 }
 
 
 
%%Allows the usage of color defined by key=value
%%\usexframendcolor{key}
%%http://tex.stackexchange.com/a/112345/5239
\NewDocumentCommand \usexframendcolor { m }
 { 
%  \color { \@@__get_color:n { #1 } }
  \tl_if_empty:fTF   % return value is empty but only if we do "f" expansion
   {  \prop_get:Nn \l__@@_color_option_prop { #1 }  }
   {  
    \msg_warning:nnnn
     { xframed } 
     { prop-key-not-available }
     { #1 }
     { color }
    \textcolor{red}{??}
   }
   {  
    \color{ \prop_get:Nn \l__@@_color_option_prop { #1 } }
   }  
 }

%%\showxframendcolor{key}
%%http://tex.stackexchange.com/a/112345/5239
\NewDocumentCommand \showxframendcolor { m }
 {
 % \@@__get_color:n { #1 }  
 \tl_if_empty:fTF   % return value is empty but only if we do "f" expansion
   {  \prop_get:Nn \l__@@_color_option_prop { #1 }  }
   {  
    \msg_warning:nnnn
     { xframed } 
     { prop-key-not-available }
     { #1 }
     { color }
    \textcolor{red}{??}
   }
   {  
    \prop_get:Nn \l__@@_color_option_prop { #1 }
   }
 }

 
%%Surround predefined environments with xframed
%%syntax \Surroundwithxframed[option list]{env name}
\NewDocumentCommand \Surroundwithxframed { O{} m }
 {
  \BeforeBeginEnvironment{#2}{\begin{xframed}[#1]}%
  \AfterEndEnvironment{#2}{\end{xframed}}%
 }

%
\NewDocumentCommand \xframedsetuptikz { m }
 {
  \pgfqkeys{/tikz/xframed}
 } 
 
 \tex_endinput:D 
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</package-user>
%    \end{macrocode}
%
%
% %^^A=======================================================================
% %^^A NEW FILE
%    \begin{macrocode}
%<*doc-package>
%    \end{macrocode}
%    
%    \begin{macrocode}
%%^^A@@=xframed%no need
%    \end{macrocode}
%
%    \begin{macrocode}
%%=======================================================%%
%% generate sty-file for documentation                   %%
%%=======================================================%%
\RequirePackage{expl3,xparse,ifxetex,ifluatex}

\ProvidesExplPackage
  {xframed-doc}{2013/05/13}{1.0}{documentation package for xframed}
\@ifpackagelater { expl3 } { 2012/11/21 }
  { }
  {
    \PackageError { xframed-doc } { Support~package~expl3~too~old }
      {
        You~need~to~update~your~installation~of~the~bundles~'l3kernel'~and~
        'l3packages'.\MessageBreak
        Loading~xframed-doc~will~abort!
      }
    \tex_endinput:D
  }
\@ifclassloaded{ l3doc }
  {  }
  {
    \PackageError { xframed-doc } { Wrong~document~class }
      {
        This~package~requires~the~document~class~l3doc~which~
        is~part~of~the~bundles~'l3kernel'~and~
        'l3packages'.\MessageBreak
        Loading~xframed-doc~will~abort!
      }
    \tex_endinput:D
  }

\ifnum 0\ifxetex 1\fi\ifluatex 1\fi>0
   % code for XeTeX or LuaTeX
\else
   \PackageError { xframed-doc } { Wrong~engine }
     {
       This~package~requires~the~engine~xetex~or~lualatex.\MessageBreak
       Loading~xframed-doc~will~abort!
     }
   \tex_endinput:D
\fi



\RequirePackage{ l3keys2e , xparse}


\keys_define:nn { xframeddoc }
  {
    tocdepth  .int_set:N  = \l__xframeddoc_tocdepth_int  ,
    tocdepth  .initial:n  = 3                            ,
    show-code .bool_set:N = \l__xframeddoc_showcode_bool ,
  }


\keys_define:nn { xframeddoc } {
  unknown .code:n =
    {
      \msg_error:nnx { xframeddoc } { option-unknown }
            { \exp_not:V \l_keys_key_tl }
    }
}
\msg_new:nnnn { xframeddoc } { option-unknown }
  { Unknown~option~'#1'~for~package~#2. }
  {
    LaTeX~has~been~asked~to~set~an~option~called~'#1'~
    but~the~#2~package~has~not~created~an~option~with~this~name.
  }

\ProcessKeysOptions { xframeddoc }

\RequirePackage{geometry}

\RequirePackage{fontspec}
\RequirePackage[ttscale=0.8]{libertine}
\RequirePackage{fontawesome} 
\RequirePackage{metalogo}
\RequirePackage{xspace}
\NewDocumentCommand \Github {} {Github\faGithub\xspace }


\RequirePackage{setspace}\onehalfspacing

\RequirePackage{titlesec}

\RequirePackage{xcolor}
\colorlet{docblue}{blue!30!black}
\colorlet{docred}{red!30!black} 
%Kopf- und Fusszeilen
\RequirePackage{scrpage2}
 \clearscrheadfoot
 \pagestyle{scrheadings}
 \automark[subsection]{section}
 \ihead{\small\rightmark}
 \ohead{\small\leftmark}
 \ofoot[\small\pagemark]{\small\pagemark}
 \setheadtopline{2pt}
 \setheadsepline{.4pt}
 \ifoot[\small file:~\jobname]{\small file:~\jobname}
 
\RequirePackage{caption}
\RequirePackage{listings}
\lst@RequireAspects{writefile}
\captionsetup[lstlisting]{font=sf,labelfont=bf,aboveskip=0pt,belowskip=0pt}
\captionsetup[figure]{font=sf,labelfont=bf,position=above}

\hypersetup{%
        breaklinks=true,
        pdftitle={Documenation of mdframed},%
        pdfauthor={Marco Daniel},%
        colorlinks=true,%
        linkcolor=docblue,
        urlcolor=cyan,
        bookmarksdepth= \int_use:N \l__xframeddoc_tocdepth_int,
}

\NewDocumentCommand \addsec { m }
 {
  \clearpage
  \phantomsection
  \addcontentsline{toc}{section}{#1}
  \section*{ #1 }
  \markboth { #1 }{}
 }
\NewDocumentCommand \addsubsec { m }
 {
  \phantomsection
  \addcontentsline{toc}{subsection}{#1}
  \subsection*{ #1 }
 }
 
\NewDocumentCommand \minisec { m }
 {
  \subsubsection*{ #1 }
 } 
 

\newcommand{\sectionbreak}{\clearpage\null\thispagestyle{plain}}

\titleformat{\section}[display]{\normalfont\Large\bfseries\sffamily}%
            {Section~\thesection\usesecpreamble}{1em}{}%
            [{\vspace{10pt}\color{docred}\titlerule[.2em]}]
\titleformat{\subsection}{\normalfont\large\bfseries\sffamily}%
            {\llap{\makebox[2em][l]{\thesubsection}}}{0em}{}

\box_new:N \g__doc_secpreamble_box

\NewDocumentCommand \usesecpreamble {}
 {
  \box_if_empty:NF \g__doc_secpreamble_box 
   {  
    \hfill 
    \hbox_overlap_left:n 
      {
       \dim_set:Nn \l_tmpa_dim { \box_ht:N \g__doc_secpreamble_box } 
       \box_set_dp:Nn \g__doc_secpreamble_box { \c_zero_dim }
       \box_set_ht:Nn \g__doc_secpreamble_box { \c_zero_dim }
       \box_move_up:nn { 0.5\l_tmpa_dim }
          { \box_use_clear:N \g__doc_secpreamble_box }
      }    
   }
 }

\NewDocumentCommand \secpreamble { m }
 {
   \hbox_gset:Nn \g__doc_secpreamble_box { #1 }
 }


\NewDocumentCommand \dictum { +o +m }
 {
  \IfNoValueTF { #1 }
   {
    \parbox{0.5\linewidth}
     { 
      \normalfont\normalcolor\sffamily\small
      \raggedright
       #2\strut  
     } 
   }
   {
    \parbox{0.5\linewidth}
     { 
      \normalfont\normalcolor\sffamily\small
      \raggedright
       #2\strut\par\vskip-1ex\hrulefill\par
      \itshape\raggedleft 
       (#1)\strut\par     
     } 
   }
 }



%Modifkation of code
\tl_gput_left:Nn \theCodelineNo { \color{gray} }
\dim_set:Nn \MacroTopsep { 10pt }
\tl_gput_right:Nn \MacroFont { \color{docblue} }


%Anweisung zur Darstellung

\NewDocumentCommand \Opt { m }
 {
  {\hyperlink{doc-md-opt-#1}{\MacroFont #1}\xspace}
 }

\NewDocumentCommand \Env { m }
 {
  {\hyperlink{doc-md-env-#1}{\MacroFont #1}\xspace}
 }

\NewDocumentCommand \Cmd { m }
 {
  {\hyperlink{doc-md-cmd-#1}{\MacroFont\textbackslash #1}\xspace}
 }

\DeclareRobustCommand \Pack {\textsf}


\NewDocumentCommand \OArgs { O{option-list} }
 {
  \texttt{[#1]}
 }
\NewDocumentCommand \MArgs { O{option-list} }
 {
  \texttt{\{#1\}}
 }

\NewDocumentCommand \Metakey {}
 {
  \quad\textcolor{red!70!black}{\tiny\faStar}
 }


\NewDocumentCommand \ExplEnv { o m O{[option-list]} }
 {
    \par
    \skip_vertical:n { 14pt~plus~0.3pt~minus~0.2pt }
    \noindent
    \hypertarget{doc-md-env-#2}
      {
       \hbox_to_wd:nn { \c_zero_dim }
                   {
                     \skip_horizontal:n { -2em }
                     \@bsphack\def\arraystretch{1.25}
                      \SpecialEnvIndex{#2}%
                      \begin{tabular}{@{}l@{}}\hline
                      \MacroFont \textbackslash begin\{#2\}#3\\
                      \MacroFont \textbackslash end\{#2\}\\\hline
                      \end{tabular} 
                     \@esphack
                    }
      }                
    \hfill\null
    \IfNoValueF { #1 }
      {
       \hbox:n { \small default=\ttfamily #1 }
      }
    \par\nobreak
    \skip_vertical:n { 12pt~plus~0.3pt~minus~0.2pt }
    \@afterheading
 }

\NewDocumentCommand \ExplCmd { o m O{} }
 {
    \par
    \skip_vertical:n { 14pt~plus~0.3pt~minus~0.2pt }
    \noindent
    \hypertarget{doc-md-cmd-#2}
      {
       \hbox_to_wd:nn { \c_zero_dim }
                   {
                     \skip_horizontal:n { -2em }
                     \@bsphack\def\arraystretch{1.25}
                      \begin{tabular}{@{}l@{}}\hline
                      \MacroFont\textbackslash #2 #3
                      \SpecialUsageIndex{#2}\\\hline
                      \end{tabular} 
                     \@esphack
                    }
      }
    \hfill\null
    \IfNoValueF { #1 }
      {
       \hbox:n { \small default=\ttfamily #1 }
      }
    \par\nobreak
    \skip_vertical:n { 12pt~plus~0.3pt~minus~0.2pt }
    \@afterheading
 }

\NewDocumentCommand \ExplOpt { o m }
 {
  \par
  \skip_vertical:n { 14pt~plus~0.3pt~minus~0.2pt }
  \noindent
   \hbox_to_wd:nn { \c_zero_dim }
     {
      \skip_horizontal:n { -2em }
      \group_begin:
       \@bsphack\def\arraystretch{1.25}
        \tl_set:Nn \l_tmpa_tl { \begin{tabular}{@{}ll@{}}\hline }
        \clist_map_inline:nn {#2} 
         {
          \tl_if_in:nnTF { ##1 }{ * }
           {
            \tl_set:Nn \l_tmpb_tl { ##1 }
            \tl_remove_once:Nn \l_tmpb_tl { * }
            \tl_put_right:Nx \l_tmpa_tl 
             {
              \exp_not:N \hypertarget{doc-md-opt-\l_tmpb_tl}
               {
                \exp_not:N \MacroFont \l_tmpb_tl \exp_not:N \Metakey
               }    
             }
            \SpecialOptIndex{ ##1 } 
            \tl_put_right:Nn \l_tmpa_tl { &\\ }
           }
           {
            \tl_put_right:Nn \l_tmpa_tl 
             {
              \hypertarget{doc-md-opt-##1}
               {
                \MacroFont ##1&=~<value> 
               }    
              \SpecialOptIndex{##1}
              \\
             }
           }            
         }              
        \tl_put_right:Nn \l_tmpa_tl {\hline\end{tabular} }                        
       \tl_use:N \l_tmpa_tl
      \@esphack
     \group_end:
     }
  \hfill\null
  \IfNoValueF { #1 }
    {
     \hbox:n { \small default=\ttfamily #1 }
    }
  \par\nobreak
  \skip_vertical:n { 12pt~plus~0.3pt~minus~0.2pt }
  \@afterheading
 }

\NewDocumentCommand \ExplTOpt { o m }
 {
    \par
    \skip_vertical:n { 14pt~plus~0.3pt~minus~0.2pt }
    \noindent
       \hbox_to_wd:nn { \c_zero_dim }
                   {
                     \skip_horizontal:n { -2em }
                     \@bsphack\def\arraystretch{1.25}
                      \begin{tabular}{@{}l@{}}\hline
                       \MacroFont #2~
                       \SpecialOptIndex{#2}\\\hline
                      \end{tabular} 
                     \@esphack
                    }
      \hypertarget{doc-md-opt-#2}{}
    \hfill\null
    \IfNoValueF { #1 }
      {
       \group_begin:\small \ttfamily
       \tl_set:Nn \l_tmpa_tl { \begin{tabular}[t]{@{}r@{}} }
       \clist_map_inline:nn {#1} 
         {
          \tl_put_right:Nn \l_tmpa_tl { ##1 \\ }
         }    
       \tl_put_right:Nn \l_tmpa_tl { \end{tabular} }    
       \tl_use:N \l_tmpa_tl
       \group_end:
      }
    \par\nobreak
    \skip_vertical:n { 12pt~plus~0.3pt~minus~0.2pt }
    \@afterheading
 }

\def\SpecialOptIndex#1{\@bsphack
    \index{#1\actualchar{\protect\ttfamily#1}
           (option)\encapchar usage}%
    \index{options:\levelchar#1\actualchar{\protect\ttfamily#1}\encapchar
           usage}\@esphack}

%\tex_endinput:D
%    \end{macrocode}
%
%
%    \begin{macrocode}
%</doc-package>
%    \end{macrocode}
%
% \end{implementation}
%
% \begingroup
% \clearpage
% \let\part\section
% \PrintChanges
% \clearpage
% \PrintIndex
% \endgroup
